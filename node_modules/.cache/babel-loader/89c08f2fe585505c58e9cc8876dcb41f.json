{"ast":null,"code":"import { SET_USER_FIELD, SET_USERS_LIST, SAVE_USER, CREATE_USER, LOGOUT, SAVE_USER_WITH_SLUG, SAVE_LOGGED_USER, SET_ERROR_MAIL_CREATE, SAVE_UPDATED_USER } from '../actions/user';\nexport const initialState = {\n  // l'utilisateur est-il loggé\n  logged: false,\n  // token de l'utilisateur \n  token: '',\n  // object with logged user deails\n  user: [],\n  // le pseudo de l'utilisateur\n  name: '',\n  // l'email de l'utilisateur\n  email: '',\n  // l'email de l'utilisateur\n  label: '',\n  // password de l'utilisateur\n  password: '',\n  //description\n  description: '',\n  // user picture\n  picture: '',\n  // Users List\n  list: [],\n  // if a user card is clicked, set to true\n  userLoaded: false,\n  // user info when card clicked \n  clickedUser: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  //Open or Close Create Modal\n  createButton: false,\n  errorCodeMail: ''\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CREATE_USER:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USER_FIELD:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USERS_LIST:\n      return { ...state,\n        list: action.usersList\n      };\n\n    case SAVE_USER:\n      // console.log('etape : 6, je passe le saveUser dans le reducer');\n      return { ...state,\n        logged: true,\n        email: action.user.username,\n        token: action.user.token,\n        user: action.user\n      };\n\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer', action.user);\n      return { ...state,\n        userLoaded: true,\n        clickedUser: action.user\n      };\n\n    case SAVE_LOGGED_USER:\n      // console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        logged: true,\n        user: action.user\n      };\n\n    case SAVE_UPDATED_USER:\n      console.log(action.user);\n      return { ...state,\n        updated: true,\n        errorCodeMail: action.user.status,\n        user: action.user.user\n      };\n\n    case LOGOUT:\n      //* Empty local storage\n      localStorage.removeItem('userToken');\n      return {\n        logged: false,\n        toDashboard: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        loggedUser: '',\n        decription: '',\n        token: ''\n      };\n\n    case SET_ERROR_MAIL_CREATE:\n      console.log('je recupere le code');\n      return { ...state,\n        errorCodeMail: action.code\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/user.js"],"names":["SET_USER_FIELD","SET_USERS_LIST","SAVE_USER","CREATE_USER","LOGOUT","SAVE_USER_WITH_SLUG","SAVE_LOGGED_USER","SET_ERROR_MAIL_CREATE","SAVE_UPDATED_USER","initialState","logged","token","user","name","email","label","password","description","picture","list","userLoaded","clickedUser","loginButton","createButton","errorCodeMail","reducer","state","action","type","value","usersList","username","console","log","updated","status","localStorage","removeItem","toDashboard","loggedUser","decription","code"],"mappings":"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","sourcesContent":["import {\n  SET_USER_FIELD, \n  SET_USERS_LIST, \n  SAVE_USER, \n  CREATE_USER, \n  LOGOUT,\n  SAVE_USER_WITH_SLUG,\n  SAVE_LOGGED_USER,\n  SET_ERROR_MAIL_CREATE,\n  SAVE_UPDATED_USER,\n} from '../actions/user';\n\nexport const initialState = {\n  // l'utilisateur est-il loggé\n  logged: false,\n  // token de l'utilisateur \n  token: '',\n  // object with logged user deails\n  user: [],\n  // le pseudo de l'utilisateur\n  name: '',\n  // l'email de l'utilisateur\n  email: '',\n  // l'email de l'utilisateur\n  label: '',\n  // password de l'utilisateur\n  password: '',\n  //description\n  description:'',\n  // user picture\n  picture: '',\n  // Users List\n  list: [],\n  // if a user card is clicked, set to true\n  userLoaded: false,\n  // user info when card clicked \n  clickedUser: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  //Open or Close Create Modal\n  createButton: false,\n  errorCodeMail:'',\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CREATE_USER:\n      return{\n        ...state,\n        [action.name]: action.value,\n\n      }\n    case SET_USER_FIELD:\n      return {\n        ...state,\n        [action.name]: action.value,\n      };\n    case SET_USERS_LIST:\n      return {\n        ...state,\n        list: action.usersList,\n      };   \n    case SAVE_USER:\n      // console.log('etape : 6, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        logged: true,        \n        email: action.user.username,\n        token: action.user.token,\n        user: action.user,\n      };\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer', action.user);\n      return {\n        ...state,\n        userLoaded : true,\n        clickedUser: action.user,\n      };\n      case SAVE_LOGGED_USER:\n        // console.log('etape : 5, je passe le saveUser dans le reducer');\n        return {\n          ...state,\n          logged: true,     \n          user: action.user,\n        };\n      case SAVE_UPDATED_USER:\n        console.log(action.user);\n        return {\n          ...state,\n          updated: true,    \n          errorCodeMail: action.user.status,\n          user: action.user.user,\n        };\n      case LOGOUT: \n        //* Empty local storage\n        localStorage.removeItem('userToken'); \n        return {\n          logged: false,\n          toDashboard: false,\n          username: '',\n          password: '',\n          email: '',\n          list: '',\n          loggedUser: '',\n          decription: '',\n          token: '',  \n        };\n      case SET_ERROR_MAIL_CREATE:\n        console.log('je recupere le code')\n        return {\n          ...state,\n          errorCodeMail: action.code,\n        }\n      \n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { SET_USER_FIELD, SET_USERS_LIST, SAVE_USER, CREATE_USER, LOGOUT, SAVE_USER_WITH_SLUG, SAVE_LOGGED_USER } from '../actions/user';\nexport const initialState = {\n  // l'utilisateur est-il loggé\n  logged: false,\n  // send the user tu dashboard after loggin\n  toDashboard: false,\n  // token de l'utilisateur \n  token: '',\n  // email de l'utilisateur\n  username: '',\n  // object with user deails\n  user: [],\n  // password de l'utilisateur\n  password: '',\n  //email\n  email: '',\n  //description\n  decription: '',\n  // Users List\n  list: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  //Open or Close Create Modal\n  createButton: false\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CREATE_USER:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USER_FIELD:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USERS_LIST:\n      return { ...state,\n        list: action.usersList\n      };\n\n    case SAVE_USER:\n      // console.log('etape : 6, je passe le saveUser dans le reducer');\n      return { ...state,\n        logged: true,\n        email: action.user.username,\n        token: action.user.token,\n        user: action.user\n      };\n\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        user: action.user\n      };\n\n    case SAVE_LOGGED_USER:\n      // console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        logged: true,\n        toDashboard: true,\n        email: action.user.username,\n        user: action.user\n      };\n\n    case LOGOUT:\n      //* Empty local storage\n      localStorage.removeItem('userToken');\n      return {\n        logged: false,\n        toDashboard: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        decription: '',\n        token: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/user.js"],"names":["SET_USER_FIELD","SET_USERS_LIST","SAVE_USER","CREATE_USER","LOGOUT","SAVE_USER_WITH_SLUG","SAVE_LOGGED_USER","initialState","logged","toDashboard","token","username","user","password","email","decription","list","loginButton","createButton","reducer","state","action","type","name","value","usersList","localStorage","removeItem"],"mappings":"AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,mBANF,EAOEC,gBAPF,QAQO,iBARP;AAUA,OAAO,MAAMC,YAAY,GAAG;AAC1B;AACAC,EAAAA,MAAM,EAAE,KAFkB;AAG1B;AACAC,EAAAA,WAAW,EAAE,KAJa;AAK1B;AACAC,EAAAA,KAAK,EAAE,EANmB;AAO1B;AACAC,EAAAA,QAAQ,EAAE,EARgB;AAS1B;AACAC,EAAAA,IAAI,EAAE,EAVoB;AAW1B;AACAC,EAAAA,QAAQ,EAAE,EAZgB;AAa1B;AACAC,EAAAA,KAAK,EAAC,EAdoB;AAe1B;AACAC,EAAAA,UAAU,EAAC,EAhBe;AAiB1B;AACAC,EAAAA,IAAI,EAAE,EAlBoB;AAmB1B;AACAC,EAAAA,WAAW,EAAE,KApBa;AAqB1B;AACAC,EAAAA,YAAY,EAAE;AAtBY,CAArB,C,CAyBP;;AACA,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9Bb,YAA8B;AAAA,MAAhBc,MAAgB,uEAAP,EAAO;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,WAAL;AACE,aAAM,EACJ,GAAGiB,KADC;AAEJ,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFlB,OAAN;;AAKF,SAAKxB,cAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFjB,OAAP;;AAIF,SAAKvB,cAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAFR,OAAP;;AAIF,SAAKvB,SAAL;AACE;AACA,aAAO,EACL,GAAGkB,KADE;AAELZ,QAAAA,MAAM,EAAE,IAFH;AAGLM,QAAAA,KAAK,EAAEO,MAAM,CAACT,IAAP,CAAYD,QAHd;AAILD,QAAAA,KAAK,EAAEW,MAAM,CAACT,IAAP,CAAYF,KAJd;AAKLE,QAAAA,IAAI,EAAES,MAAM,CAACT;AALR,OAAP;;AAOF,SAAKP,mBAAL;AACE;AACA,aAAO,EACL,GAAGe,KADE;AAELR,QAAAA,IAAI,EAAES,MAAM,CAACT;AAFR,OAAP;;AAIF,SAAKN,gBAAL;AACE;AACA,aAAO,EACL,GAAGc,KADE;AAELZ,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,WAAW,EAAE,IAHR;AAILK,QAAAA,KAAK,EAAEO,MAAM,CAACT,IAAP,CAAYD,QAJd;AAKLC,QAAAA,IAAI,EAAES,MAAM,CAACT;AALR,OAAP;;AAOF,SAAKR,MAAL;AACE;AACAsB,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,aAAO;AACLnB,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,WAAW,EAAE,KAFR;AAGLE,QAAAA,QAAQ,EAAE,EAHL;AAILE,QAAAA,QAAQ,EAAE,EAJL;AAKLC,QAAAA,KAAK,EAAE,EALF;AAMLE,QAAAA,IAAI,EAAE,EAND;AAOLD,QAAAA,UAAU,EAAE,EAPP;AAQLL,QAAAA,KAAK,EAAE;AARF,OAAP;;AAWF;AACE,aAAOU,KAAP;AAxDJ;AA0DD,CA3DD;;AA6DA,eAAeD,OAAf","sourcesContent":["import {\n  SET_USER_FIELD, \n  SET_USERS_LIST, \n  SAVE_USER, \n  CREATE_USER, \n  LOGOUT,\n  SAVE_USER_WITH_SLUG,\n  SAVE_LOGGED_USER,\n} from '../actions/user';\n\nexport const initialState = {\n  // l'utilisateur est-il loggé\n  logged: false,\n  // send the user tu dashboard after loggin\n  toDashboard: false,\n  // token de l'utilisateur \n  token: '',\n  // email de l'utilisateur\n  username: '',\n  // object with user deails\n  user: [],\n  // password de l'utilisateur\n  password: '',\n  //email\n  email:'',\n  //description\n  decription:'',\n  // Users List\n  list: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  //Open or Close Create Modal\n  createButton: false,\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CREATE_USER:\n      return{\n        ...state,\n        [action.name]: action.value,\n\n      }\n    case SET_USER_FIELD:\n      return {\n        ...state,\n        [action.name]: action.value,\n      };\n    case SET_USERS_LIST:\n      return {\n        ...state,\n        list: action.usersList,\n      };   \n    case SAVE_USER:\n      // console.log('etape : 6, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        logged: true,        \n        email: action.user.username,\n        token: action.user.token,\n        user: action.user,\n      };\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        user: action.user,\n      };\n    case SAVE_LOGGED_USER:\n      // console.log('etape : 5, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        logged: true,  \n        toDashboard: true,      \n        email: action.user.username,\n        user: action.user,\n      };\n    case LOGOUT: \n      //* Empty local storage\n      localStorage.removeItem('userToken'); \n      return {\n        logged: false,\n        toDashboard: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        decription: '',\n        token: '',  \n      };\n      \n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
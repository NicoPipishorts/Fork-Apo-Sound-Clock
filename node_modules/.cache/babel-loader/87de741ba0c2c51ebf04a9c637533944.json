{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/User/index.js\",\n    _s = $RefreshSig$();\n\n// == IMPORT NPM\nimport React, { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Icon } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\"; // == IMPORT ASSETS\n\nimport ModalAddMusic from \"./ModalAddMusic\";\nimport ModalUpdateProfile from \"./ModalUpdateProfile\";\nimport { setMusicField, sendMusic } from '../../actions/musics';\nimport Music from \"../Cards/Music\";\nimport Playlist from \"../Cards/Playlist\";\nimport { getUserWithSlug } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  _s();\n\n  let {\n    avatar,\n    baseApiUrl\n  } = _ref;\n  const dispatch = useDispatch(); //* useParams used to pickup the slug is the user is not logged\n\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    dispatch(getUserWithSlug(slug));\n    console.log('useEffect ???');\n  }, []); //* Logged status retrieval\n\n  const logged = useSelector(state => state.users.logged); //* Modal State values for controled fields\n\n  const modalTitle = useSelector(state => state.musics.title);\n  const modalFile = useSelector(state => state.musics.file);\n  const modalPicture = useSelector(state => state.musics.picture);\n  const modalReleaseDate = useSelector(state => state.musics.releaseDate);\n  const modalDescription = useSelector(state => state.musics.description);\n  const progressUpload = useSelector(state => state.musics.progress);\n  const errorCode = useSelector(state => state.musics.errorCode);\n  let userData;\n  let musicsData;\n  let playlistsData; //* clicked User data\n\n  const clickedUser = useSelector(state => state.users.clickedUser); // console.log('je suis sur la page user, je suis la valuer du clockedUser : ', clickedUser);\n  //* logged in User data\n\n  const loggedUser = useSelector(state => state.users.user); //console.log('je suis sur la page user, je suis la valuer du loggedUser : ', loggedUser);\n  // const usersList = useSelector((state) => state.users.list);\n  // console.log('je suis sur la page user, voici la liste de user:' , usersList);\n  //* User Data retreival from the state\n\n  if (clickedUser) {\n    userData = clickedUser;\n    console.log(' je suis le user data du clicked user : ', userData);\n    musicsData = userData.musics;\n    playlistsData = userData.playlists;\n  } else {\n    userData = loggedUser;\n    console.log(' je suis le user data du logged user : ', userData);\n    musicsData = userData.musics;\n    playlistsData = userData.playlists;\n  }\n\n  const changeField = (value, name) => {\n    //console.log(`Je veux modifier le champ ${name} avec la valeur ${value}`);\n    dispatch(setMusicField(value, name));\n  };\n\n  const handleAddMusic = dateValue => {\n    // console.log('Je veux me logger (au moins essayer)');\n    dispatch(sendMusic(dateValue));\n  }; //TODO Picking up the musics results for the user from the user musics API\n\n\n  const certificationIcon = /*#__PURE__*/_jsxDEV(Icon, {\n    name: \"certificate\",\n    size: \"tiny\",\n    color: \"grey\",\n    className: \"card__content--h1-cert\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 29\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"user-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__avatar--container\",\n        children: [!logged && !slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__avatar\",\n            style: {\n              \"backgroundImage\": `url(${avatar})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false), (logged || slug) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__avatar\",\n            style: {\n              \"backgroundImage\": `url(${userData.picture})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false), logged && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__modifyUser-btn\",\n            children: /*#__PURE__*/_jsxDEV(ModalUpdateProfile, {\n              title: modalTitle,\n              file: modalFile,\n              picture: modalPicture,\n              releaseDate: modalReleaseDate,\n              description: modalDescription,\n              changeField: changeField,\n              handleAddMusic: handleAddMusic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"user__header-container\",\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!logged && !slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name-noUser\",\n              children: \"Aucun utilisateur trouv\\xE9.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this)\n          }, void 0, false), logged && !slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name\",\n              children: [\"Welcome \", userData.name, userData.certification && certificationIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)\n          }, void 0, false), logged && slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name\",\n              children: [\"Welcome \", userData.name, userData.certification && certificationIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false), !logged && slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name\",\n              children: [\"Welcome \", slug, userData.certification && certificationIcon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), (logged || slug) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__description\",\n            children: userData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-container\",\n      children: [logged && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__addMusic-btn\",\n          children: /*#__PURE__*/_jsxDEV(ModalAddMusic, {\n            title: modalTitle,\n            file: modalFile,\n            picture: modalPicture,\n            releaseDate: modalReleaseDate,\n            description: modalDescription,\n            changeField: changeField,\n            handleAddMusic: handleAddMusic,\n            progress: progressUpload,\n            errorCode: errorCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"content__section-title\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards__container\",\n        children: musics.map(music => /*#__PURE__*/_jsxDEV(Music, {\n          name: music.title,\n          date: music.releaseDate,\n          image: music.picture,\n          description: music.description,\n          song: music.file,\n          nbLike: music.nbLike,\n          nbListened: music.nbListened,\n          baseApiUrl: baseApiUrl\n        }, music.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"content__section-title\",\n        children: \"Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards__container\",\n        children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n          name: playlist.title,\n          date: playlist.createdAt,\n          image: playlist.picture,\n          description: playlist.description,\n          nbLike: playlist.nbLike,\n          baseApiUrl: baseApiUrl\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"LNs+LV50VWN7zbdvxNBXRJqCvw4=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = User;\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/User/index.js"],"names":["React","useEffect","useParams","PropTypes","Container","Icon","useSelector","useDispatch","ModalAddMusic","ModalUpdateProfile","setMusicField","sendMusic","Music","Playlist","getUserWithSlug","User","avatar","baseApiUrl","dispatch","slug","console","log","logged","state","users","modalTitle","musics","title","modalFile","file","modalPicture","picture","modalReleaseDate","releaseDate","modalDescription","description","progressUpload","progress","errorCode","userData","musicsData","playlistsData","clickedUser","loggedUser","user","playlists","changeField","value","name","handleAddMusic","dateValue","certificationIcon","certification","map","music","nbLike","nbListened","id","playlist","createdAt","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport React, { useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Icon } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\n// == IMPORT ASSETS\nimport ModalAddMusic from \"./ModalAddMusic\";\nimport ModalUpdateProfile from \"./ModalUpdateProfile\";\nimport { setMusicField, sendMusic } from '../../actions/musics';\nimport Music from \"../Cards/Music\";\nimport Playlist from \"../Cards/Playlist\";\nimport { getUserWithSlug } from \"../../actions/user\";\n\nconst User = ( { avatar, baseApiUrl }) => { \n\n  const dispatch = useDispatch();\n\n  //* useParams used to pickup the slug is the user is not logged\n  const { slug } = useParams();\n  useEffect(\n    () => {\n      dispatch(getUserWithSlug(slug));\n      console.log('useEffect ???');\n    }, []\n  );\n\n  //* Logged status retrieval\n  const logged = useSelector((state) => state.users.logged);\n\n  //* Modal State values for controled fields\n  const modalTitle = useSelector((state) => state.musics.title);\n  const modalFile = useSelector((state) => state.musics.file);\n  const modalPicture = useSelector((state) => state.musics.picture);\n  const modalReleaseDate = useSelector((state) => state.musics.releaseDate);\n  const modalDescription = useSelector((state) => state.musics.description);\n  const progressUpload = useSelector((state) => state.musics.progress );\n  const errorCode = useSelector((state) => state.musics.errorCode);\n\n  \n  let userData;\n  let musicsData;\n  let playlistsData;\n\n  //* clicked User data\n  const clickedUser  =  useSelector((state) => state.users.clickedUser);\n  // console.log('je suis sur la page user, je suis la valuer du clockedUser : ', clickedUser);\n  //* logged in User data\n  const loggedUser = useSelector((state) => state.users.user);\n  //console.log('je suis sur la page user, je suis la valuer du loggedUser : ', loggedUser);\n\n  // const usersList = useSelector((state) => state.users.list);\n  // console.log('je suis sur la page user, voici la liste de user:' , usersList);\n\n  //* User Data retreival from the state\n  if((clickedUser)){\n    userData = clickedUser;\n    console.log(' je suis le user data du clicked user : ', userData);\n    musicsData = userData.musics;\n    playlistsData = userData.playlists;\n  } else {\n    userData = loggedUser;\n    console.log(' je suis le user data du logged user : ', userData);\n    musicsData = userData.musics;\n    playlistsData = userData.playlists;\n  }\n\n  const changeField = (value, name) => {\n    //console.log(`Je veux modifier le champ ${name} avec la valeur ${value}`);\n    dispatch(setMusicField(value, name));\n  };\n\n  const handleAddMusic = (dateValue) => {\n    // console.log('Je veux me logger (au moins essayer)');\n    dispatch(sendMusic(dateValue));\n  };\n  \n  //TODO Picking up the musics results for the user from the user musics API\n\n  const certificationIcon = <Icon name='certificate' size='tiny' color='grey' className='card__content--h1-cert' />;\n  return (\n    \n    <div className=\"user-wrapper\">\n\n    <section className=\"user-container\">\n\n      <div className=\"user__avatar--container\">\n      \n      {/* //* Conditional view for avater if not logged or no slug selected */}\n        {((!logged) && (!slug)) && (\n          <>\n          <div className=\"user__avatar\" style={{\"backgroundImage\": `url(${avatar})` }}></div>\n          </>\n        )}\n      {/* //* Conditional view for avater if logged or slug available */}\n        {((logged) || (slug)) && (\n          <>\n          <div className=\"user__avatar\" style={{\"backgroundImage\": `url(${userData.picture})` }}></div>\n          </>\n        )}    \n\n        {/* Modal to modifythe user data */}\n        { logged &&\n        <>\n          <div className=\"user__modifyUser-btn\">\n            <ModalUpdateProfile \n              title={modalTitle}\n              file={modalFile}\n              picture={modalPicture}\n              releaseDate={modalReleaseDate}\n              description={modalDescription}\n              changeField={changeField}\n              handleAddMusic={handleAddMusic}\n            />     \n          </div>\n        </>\n        }\n      </div>\n\n      <Container className=\"user__header-container\" fluid>\n        <>\n          {(!logged) && (!slug) && (\n            <>\n            <h1 className=\"user__header--name-noUser\">Aucun utilisateur trouvé.</h1>\n            </>\n          )}\n          {((logged) && (!slug)) && (\n            <>\n            <h1 className=\"user__header--name\">Welcome {userData.name}\n            {(userData.certification) && certificationIcon }\n            </h1>\n            </>\n          )} \n          {((logged) && (slug)) && (\n            <>\n            <h1 className=\"user__header--name\">Welcome {userData.name}\n            {(userData.certification) && certificationIcon }\n            </h1>\n            </>\n          )} \n          {((!logged) && (slug)) && (\n            <>\n            <h1 className=\"user__header--name\">Welcome {slug}\n            {(userData.certification) && certificationIcon }\n            </h1>\n            </>\n          )}\n        </>\n\n        {/* //TODO FROM HERE TO */}\n        {/*\n        {((logged) || (slug)) && (\n        <>    \n          <span className=\"user__header--link\">\n            http://wwww.soundclock.com/\n            {logged && userData.name } \n            {!logged && slug}\n          </span>\n          <br />\n          <br /><br />\n          <div className=\"user__header-h2\">Abonnés: \n            <span className=\"user__header-h2--stats\">\n              {userData.subscribers.length}\n            </span>\n          </div> \n          <br /><br />\n          <div className=\"user__header-h2\">Musiques: \n            <span className=\"user__header-h2--stats\">\n              {userData.musics.length}\n            </span>\n          </div>\n          <br /><br />\n          <div className=\"user__header-h2\">Label: \n            <span className=\"user__header-h2--stats\">\n              {userData.label}\n            </span>\n          </div>            \n        </>\n        )}\n        */}\n        {/* //TODO TO HERE useEffect loading error */}\n\n      </Container>\n      \n    {((logged) || (slug)) && (\n    <>\n      <Container fluid>\n\n        <div className=\"user__description\">\n        {userData.description}\n        </div>\n\n      </Container>\n    </>\n    )}\n    </section>\n\n    <section className=\"content-container\">\n\n    {/* Modal to Upload new content, only visible if logged in */}\n    {logged &&\n    <>\n      <div className=\"content__addMusic-btn\">\n        <ModalAddMusic \n          title={modalTitle}\n          file={modalFile}\n          picture={modalPicture}\n          releaseDate={modalReleaseDate}\n          description={modalDescription}\n          changeField={changeField}\n          handleAddMusic={handleAddMusic}\n          progress = {progressUpload}\n          errorCode= {errorCode}\n        />     \n      </div>\n    </>\n    }\n\n    {/* //TODO FROM HERE TO */}\n      {/* //* User Music section */}\n      <h1 className=\"content__section-title\">Music</h1>\n      <div className=\"cards__container\">\n        {\n        musics.map((music) =>( \n          <Music\n            key={music.id}\n            name={music.title}\n            date={music.releaseDate}\n            image={music.picture}\n            description={music.description}\n            song={music.file}\n            nbLike={music.nbLike} \n            nbListened={music.nbListened} \n            baseApiUrl={baseApiUrl}   \n            />\n        ) ) \n        }\n      </div>\n      {/* //* User Playlist section */}\n      <h1 className=\"content__section-title\">Playlists</h1>\n      <div className=\"cards__container\">\n        {\n          playlists.map((playlist) =>( \n          <Playlist\n            key={playlist.id}\n            name={playlist.title}\n            date={playlist.createdAt}\n            image={playlist.picture}\n            description={playlist.description}\n            nbLike={playlist.nbLike} \n            baseApiUrl={baseApiUrl}   \n            />\n        ) ) \n        }\n      </div>\n    {/* //TODO TO HERE useEffect loading issue */}\n      \n    </section>\n\n  </div>\n\n  );\n\n};\n\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired,\n}\n\n\nexport default User;"]},"metadata":{},"sourceType":"module"}
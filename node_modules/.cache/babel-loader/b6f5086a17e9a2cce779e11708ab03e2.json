{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios'; // == IMPORT ASSETS\n\nimport { LOGIN, GET_USER, getUser, saveUser, GET_USER_WITH_SLUG } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        //console.log('etape : 3 je passe par le middleware login je vais au get user');\n        const {\n          users: {\n            username,\n            password\n          }\n        } = store.getState(); // Send request with User Login for JWT Token\n\n        axios.post(`${baseURL}/api/login_check`, {\n          username,\n          password\n        }).then(response => {\n          localStorage.setItem('itemName', response.data.token);\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n          let payload = JSON.parse(jsonPayload);\n          console.log('je suis le payload', payload);\n          store.dispatch(getUser(username));\n        }).catch(() => console.log('Login error'));\n      }\n      break;\n\n    case GET_USER:\n      //console.log('etape : 4, me voila au get user, je passe au saveUser');\n      const {\n        users: {\n          username,\n          token,\n          list\n        }\n      } = store.getState();\n      let user = list.find(user => user.email === username);\n      user.token = token;\n      store.dispatch(saveUser(user));\n      break;\n\n    case GET_USER_WITH_SLUG:\n      console.log('Get User With slug prop passed to middleware ', action.slug);\n      console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        console.log('je suis le response du get user with slug', response); //store.dispatch(getUser(username));   \n      }).catch(() => console.log('Get User By Slug Error'));\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","LOGIN","GET_USER","getUser","saveUser","GET_USER_WITH_SLUG","baseURL","authMiddleWare","store","next","action","type","users","username","password","getState","post","then","response","localStorage","setItem","data","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","console","log","dispatch","catch","list","user","find","email","slug","get"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, \n  GET_USER, \n  getUser, \n  saveUser, \n  GET_USER_WITH_SLUG,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      //console.log('etape : 3 je passe par le middleware login je vais au get user');\n      const { users: { username, password } } = store.getState();\n\n      // Send request with User Login for JWT Token\n      axios.post(`${baseURL}/api/login_check`, {\n        username,\n        password,\n      }).then(\n        (response) => {\n          localStorage.setItem('itemName', response.data.token)\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n\n          let payload =  JSON.parse(jsonPayload);\n          console.log('je suis le payload', payload);\n          \n          store.dispatch(getUser(username));   \n        },\n      ).catch(\n        () => console.log('Login error'),\n      );\n    }\n    break;\n    case GET_USER: \n      //console.log('etape : 4, me voila au get user, je passe au saveUser');\n\n      const {users: { username, token, list}} = store.getState();\n\n      let user = list.find(user => user.email === username);\n      user.token = token;\n      store.dispatch(saveUser(user)); \n\n    break;\n    case GET_USER_WITH_SLUG: \n\n      console.log('Get User With slug prop passed to middleware ',action.slug);\n      console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          console.log('je suis le response du get user with slug', response);\n          \n          //store.dispatch(getUser(username));   \n        },\n      ).catch(\n        () => console.log('Get User By Slug Error'),\n      );\n\n    break;\n  default:\n    next(action);\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}
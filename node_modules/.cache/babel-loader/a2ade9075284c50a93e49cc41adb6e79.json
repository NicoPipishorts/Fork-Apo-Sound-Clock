{"ast":null,"code":"// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\"; // == IMPORT ASSETS\n\nimport { CREATE_USER, getUpdatedUser, GET_UPDATED_USER, GET_USERS_LIST, saveUpdatedUser, setErrorMailCreate, setUsersList, UPDATE_PROFILE } from '../actions/user';\nimport { setProgress, setErrorCode } from '../actions/musics';\n\nconst usersApi = store => next => action => {\n  const formData = new FormData();\n  let {\n    users: {\n      name,\n      email,\n      password,\n      picture,\n      description,\n      user\n    }\n  } = store.getState();\n\n  if (email !== '') {\n    formData.append('email', email);\n  }\n\n  if (description !== '') {\n    formData.append('description', description);\n  }\n\n  if (password !== '') {\n    formData.append('password', password);\n  }\n\n  if (picture !== '') {\n    formData.append('picture', picture);\n  }\n\n  console.log(picture);\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      store.dispatch(setProgress(Math.round(100 * data.loaded / data.total)));\n    }\n  };\n  const baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\n  switch (action.type) {\n    case CREATE_USER:\n      axios.post(`${baseURL}/api/user/new`, {\n        email,\n        name,\n        password\n      }, config).then(response => {\n        console.log('Le data a était envoyé, all is good.', response);\n      }).catch(error => {\n        store.dispatch(setErrorMailCreate(error.response.data.error));\n        console.log(\"je suis la reponse.status\", error.response.data.error);\n        console.log('error nul', error);\n      });\n      break;\n\n    case GET_USERS_LIST:\n      axios.get(`${baseURL}/api/users/rand`).then(response => {\n        store.dispatch(setUsersList(response.data));\n      }).catch(error => {\n        // eslint-disable-next-line no-console\n        console.log('error', error);\n      });\n      break;\n\n    case UPDATE_PROFILE:\n      console.log('je récupére bien les info dans le middleware user : ');\n\n      for (var pair of formData.entries()) {\n        console.log(pair[0] + ' > ' + pair[1]);\n      }\n\n      axios.post(`${baseURL}/api/user/edit/${user.id}`, formData, config).then(response => {\n        // console.log('Le user a était updaté, all is good.', response.status);\n        const data = {\n          slug: user.slug,\n          status: response.status\n        };\n        store.dispatch(getUpdatedUser(data));\n      }).catch(error => {\n        // eslint-disable-next-line no-console\n        store.dispatch(setErrorCode(error.response.data.error)); //* console.log(\"je suis la reponse.status\",error.response.data.error); \n\n        console.log('Music Upload Error', error);\n      });\n      break;\n\n    case GET_UPDATED_USER:\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        const data = {\n          user: response.data,\n          status: action.status\n        };\n        store.dispatch(saveUpdatedUser(data));\n      }).catch(error => {\n        console.log('Error while saving the updates for the user : ', error);\n      });\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default usersApi;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/usersApi.js"],"names":["axios","FormData","CREATE_USER","getUpdatedUser","GET_UPDATED_USER","GET_USERS_LIST","saveUpdatedUser","setErrorMailCreate","setUsersList","UPDATE_PROFILE","setProgress","setErrorCode","usersApi","store","next","action","formData","users","name","email","password","picture","description","user","getState","append","console","log","config","headers","onUploadProgress","data","dispatch","Math","round","loaded","total","baseURL","type","post","then","response","catch","error","get","pair","entries","id","slug","status"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\n// == IMPORT ASSETS\nimport {\n  CREATE_USER,\n  getUpdatedUser,\n  GET_UPDATED_USER,\n  GET_USERS_LIST, \n  saveUpdatedUser, \n  setErrorMailCreate, \n  setUsersList,\n  UPDATE_PROFILE,\n} from '../actions/user';\n\nimport {  \n    setProgress,\n    setErrorCode\n} from '../actions/musics';\n\n\nconst usersApi = (store) => (next) => (action) =>{\n      \n  const formData = new FormData();\n\n  let { users : {\n    name,\n    email,\n    password,\n    picture,\n    description,\n    user\n  }} = store.getState();\n\n  if(email !== '') {\n    formData.append('email', email);\n  }\n\n  if(description !== ''){\n    formData.append('description', description);\n  }\n\n  if(password !== ''){\n    formData.append('password', password);\n  }\n\n  if(picture !== '') {\n    formData.append('picture', picture);\n  }\n\n  console.log(picture);\n\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      \n      //Set the progress value to show the progress bar\n      store.dispatch(setProgress(Math.round((100 * data.loaded) / data.total)))\n      \n    }\n\n  };\n\n  const baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\n  switch (action.type) {\n   \n    case CREATE_USER:\n      axios.post(`${baseURL}/api/user/new` , {\n        email,\n        name,\n        password  \n      }, config\n        ).then((response) => {\n          console.log('Le data a était envoyé, all is good.',response);\n        })\n        .catch((error) => {\n          store.dispatch(setErrorMailCreate(error.response.data.error))\n          console.log(\"je suis la reponse.status\",error.response.data.error);\n          console.log('error nul', error);\n        });\n      break;\n\n    case GET_USERS_LIST: \n      axios.get(`${baseURL}/api/users/rand`)\n      .then((response) => {\n          store.dispatch(setUsersList(response.data));\n        })\n      .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log('error', error);\n        });\n      break;\n\n    case UPDATE_PROFILE:\n        console.log('je récupére bien les info dans le middleware user : ');\n        for (var pair of formData.entries()) {\n            console.log(pair[0]+ ' > ' + pair[1]); \n        }\n        \n        axios.post(`${baseURL}/api/user/edit/${user.id}`,\n        formData, \n        config\n          ).then((response) => {\n            // console.log('Le user a était updaté, all is good.', response.status);\n            const data = {slug: user.slug, status: response.status}\n            store.dispatch(getUpdatedUser(data));\n          })\n          .catch((error) => {\n            // eslint-disable-next-line no-console\n            store.dispatch(setErrorCode(error.response.data.error))\n            //* console.log(\"je suis la reponse.status\",error.response.data.error); \n            console.log('Music Upload Error', error);\n          }); \n        \n      break;\n\n      case GET_UPDATED_USER: \n        axios.get(`${baseURL}/api/user/${action.slug}`)\n        .then((response) => {\n            const data = {user: response.data, status: action.status}\n            store.dispatch(saveUpdatedUser(data));\n          })\n        .catch((error) => {\n            console.log('Error while saving the updates for the user : ', error);\n          });\n        break;\n    default:\n    next(action);   \n  }\n};\nexport default usersApi;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios'; // == IMPORT ASSETS\n\nimport { LOGIN, GET_USER, getUser, saveUser, GET_USER_WITH_SLUG, saveUserWithSlug, GET_LOGGED_USER, saveLoggedUser } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        console.log('etape : 3 je passe par le middleware login je vais au get user');\n        const {\n          users: {\n            username,\n            password\n          }\n        } = store.getState(); // Send request with User Login for JWT Token\n\n        axios.post(`${baseURL}/api/login_check`, {\n          username,\n          password\n        }).then(response => {\n          localStorage.setItem('userToken', response.data.token);\n          console.log('etape : 4 réponse positive je passe au getUser');\n          store.dispatch(getUser(username));\n        }).catch(() => console.log('Login error'));\n      }\n      break;\n\n    case GET_USER:\n      console.log('etape : 5, me voila au get user, je passe au saveUser');\n      const {\n        users: {\n          username,\n          token,\n          list\n        }\n      } = store.getState();\n      console.log('etape : 5.1, me voila au get user, voici les valeurs récupéré : ');\n      let user = list.find(user => user.email === username);\n      user.token = token;\n      store.dispatch(saveUser(user));\n      break;\n\n    case GET_USER_WITH_SLUG:\n      // console.log('Get User With slug prop passed to middleware ',action.slug);\n      // console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        // console.log('je suis le response du get user with slug', response);\n        store.dispatch(saveUserWithSlug(response.data));\n      }).catch(() => console.log('Get User By Slug Error'));\n      break;\n    //* Action Type to recover logged user from Token\n\n    case GET_LOGGED_USER:\n      // console.log('voici la route de l\\'api pour get logged user: ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        //console.log('je suis le response du get user with slug', response.data);\n        store.dispatch(saveLoggedUser(response.data));\n      }).catch(error => console.log('Get Logged User by Slug : error : ', error));\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","LOGIN","GET_USER","getUser","saveUser","GET_USER_WITH_SLUG","saveUserWithSlug","GET_LOGGED_USER","saveLoggedUser","baseURL","authMiddleWare","store","next","action","type","console","log","users","username","password","getState","post","then","response","localStorage","setItem","data","token","dispatch","catch","list","user","find","email","get","slug","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,KADF,EAEEC,QAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,kBALF,EAMEC,gBANF,EAOEC,eAPF,EAQEC,cARF,QASO,iBATP,C,CAWA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,uEAAhB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,KAAL;AAAY;AACVc,QAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACA,cAAM;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AAAT,YAAoCR,KAAK,CAACS,QAAN,EAA1C,CAFU,CAIV;;AACApB,QAAAA,KAAK,CAACqB,IAAN,CAAY,GAAEZ,OAAQ,kBAAtB,EAAyC;AACvCS,UAAAA,QADuC;AAEvCC,UAAAA;AAFuC,SAAzC,EAGGG,IAHH,CAIGC,QAAD,IAAc;AACZC,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,QAAQ,CAACG,IAAT,CAAcC,KAAhD;AAEAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AAEAL,UAAAA,KAAK,CAACiB,QAAN,CAAezB,OAAO,CAACe,QAAD,CAAtB;AAED,SAXH,EAYEW,KAZF,CAaE,MAAMd,OAAO,CAACC,GAAR,CAAY,aAAZ,CAbR;AAeD;AACD;;AACA,SAAKd,QAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AAEA,YAAM;AAACC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAF;AAAYS,UAAAA,KAAZ;AAAmBG,UAAAA;AAAnB;AAAR,UAAoCnB,KAAK,CAACS,QAAN,EAA1C;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,kEAAZ;AAEA,UAAIe,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUD,IAAI,IAAIA,IAAI,CAACE,KAAL,KAAef,QAAjC,CAAX;AACAa,MAAAA,IAAI,CAACJ,KAAL,GAAaA,KAAb;AACAhB,MAAAA,KAAK,CAACiB,QAAN,CAAexB,QAAQ,CAAC2B,IAAD,CAAvB;AAEF;;AAEA,SAAK1B,kBAAL;AAEE;AACA;AACAL,MAAAA,KAAK,CAACkC,GAAN,CAAW,GAAEzB,OAAQ,aAAYI,MAAM,CAACsB,IAAK,EAA7C,EAAgDb,IAAhD,CACGC,QAAD,IAAc;AACZ;AACAZ,QAAAA,KAAK,CAACiB,QAAN,CAAetB,gBAAgB,CAACiB,QAAQ,CAACG,IAAV,CAA/B;AACD,OAJH,EAKEG,KALF,CAME,MAAMd,OAAO,CAACC,GAAR,CAAY,wBAAZ,CANR;AASF;AAEA;;AACA,SAAKT,eAAL;AAEE;AACAP,MAAAA,KAAK,CAACkC,GAAN,CAAW,GAAEzB,OAAQ,aAAYI,MAAM,CAACsB,IAAK,EAA7C,EAAgDb,IAAhD,CACGC,QAAD,IAAc;AACZ;AACAZ,QAAAA,KAAK,CAACiB,QAAN,CAAepB,cAAc,CAACe,QAAQ,CAACG,IAAV,CAA7B;AACD,OAJH,EAKEG,KALF,CAMGO,KAAD,IAAWrB,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDoB,KAAlD,CANb;AASF;;AAEF;AACExB,MAAAA,IAAI,CAACC,MAAD,CAAJ;AAlEF;AAoED,CArED;;AAuEA,eAAeH,cAAf","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, \n  GET_USER, \n  getUser, \n  saveUser, \n  GET_USER_WITH_SLUG,\n  saveUserWithSlug,\n  GET_LOGGED_USER,\n  saveLoggedUser,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      console.log('etape : 3 je passe par le middleware login je vais au get user');\n      const { users: { username, password } } = store.getState();\n\n      // Send request with User Login for JWT Token\n      axios.post(`${baseURL}/api/login_check`, {\n        username,\n        password,\n      }).then(\n        (response) => {\n          localStorage.setItem('userToken', response.data.token);\n\n          console.log('etape : 4 réponse positive je passe au getUser'); \n\n          store.dispatch(getUser(username));  \n          \n        },\n      ).catch(\n        () => console.log('Login error'),\n      );\n    }\n    break;\n    case GET_USER: \n      console.log('etape : 5, me voila au get user, je passe au saveUser');\n\n      const {users: { username, token, list}} = store.getState();\n      console.log('etape : 5.1, me voila au get user, voici les valeurs récupéré : ');\n\n      let user = list.find(user => user.email === username);\n      user.token = token;\n      store.dispatch(saveUser(user)); \n\n    break;\n\n    case GET_USER_WITH_SLUG: \n\n      // console.log('Get User With slug prop passed to middleware ',action.slug);\n      // console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          // console.log('je suis le response du get user with slug', response);\n          store.dispatch(saveUserWithSlug(response.data));   \n        },\n      ).catch(\n        () => console.log('Get User By Slug Error'),\n      );\n\n    break;\n    \n    //* Action Type to recover logged user from Token\n    case GET_LOGGED_USER: \n\n      // console.log('voici la route de l\\'api pour get logged user: ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          //console.log('je suis le response du get user with slug', response.data);\n          store.dispatch(saveLoggedUser(response.data));   \n        },\n      ).catch(\n        (error) => console.log('Get Logged User by Slug : error : ', error),\n      );\n      \n    break;\n    \n  default:\n    next(action);\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}
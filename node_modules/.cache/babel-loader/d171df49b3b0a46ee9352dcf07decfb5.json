{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/Columns/index.js\",\n    _s = $RefreshSig$();\n\n// IMPORT NPM\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; // == IMPORT ASSETS\n\nimport CardMusic from './CardMusic';\nimport CardUser from './CardUser';\nimport CardPlaylist from './CardPlaylist';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Columns = _ref => {\n  _s();\n\n  let {\n    baseApiUrl\n  } = _ref;\n  const musics = useSelector(state => state.musics.list); //console.log('Object sur view column', musics);\n\n  const users = useSelector(state => state.users.list); //console.log('Object sur view column', users);  \n\n  const playlists = useSelector(state => state.playlists.list); //console.log('Object sur view column', playlists);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"columns\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container columns-container__col-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"columns-container__title\",\n        children: \"Top 10 Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), musics.map(music => /*#__PURE__*/_jsxDEV(CardMusic, {\n        name: music.title,\n        date: music.releaseDate,\n        image: music.picture,\n        song: music.file,\n        nbLike: music.nbLike,\n        nbListened: music.nbListened,\n        baseApiUrl: baseApiUrl\n      }, music.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container columns-container__col-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"columns-container__title\",\n        children: \"Top 10 Artistes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(CardUser, {\n        name: user.name,\n        description: user.description,\n        image: user.picture,\n        label: user.label,\n        certification: user.certification,\n        baseApiUrl: baseApiUrl\n      }, user.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container columns-container__col-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"columns-container__title\",\n        children: \"Top 10 Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), playlists.map(playlist => /*#__PURE__*/_jsxDEV(CardPlaylist, {\n        name: playlist.name,\n        description: playlist.description,\n        image: playlist.picture,\n        nbLike: playlist.nbLike,\n        album: playlist.album,\n        createdAt: playlist.createdAt,\n        baseApiUrl: baseApiUrl\n      }, playlist.description, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Columns, \"JaAam77miPWa/PkyLbhMlm7GVqM=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Columns;\nColumns.propTypes = {\n  baseApiUrl: PropTypes.string.isRequired\n};\nexport default Columns;\n\nvar _c;\n\n$RefreshReg$(_c, \"Columns\");","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/Columns/index.js"],"names":["useSelector","PropTypes","CardMusic","CardUser","CardPlaylist","Columns","baseApiUrl","musics","state","list","users","playlists","map","music","title","releaseDate","picture","file","nbLike","nbListened","id","user","name","description","label","certification","playlist","album","createdAt","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["// IMPORT NPM\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// == IMPORT ASSETS\nimport CardMusic from './CardMusic';\nimport CardUser from './CardUser';\nimport CardPlaylist from './CardPlaylist';\nimport './styles.scss';\n\nconst Columns = ( { baseApiUrl }) => {\n  \n  const musics = useSelector((state) => state.musics.list);\n  //console.log('Object sur view column', musics);\n  \n  const users = useSelector((state) => state.users.list);\n  //console.log('Object sur view column', users);  \n\n  const playlists = useSelector((state) => state.playlists.list);\n  //console.log('Object sur view column', playlists);\n\n\n  return(\n \n  <section className=\"columns\">\n    \n    <div className='columns-container columns-container__col-1'>\n          \n      <span className=\"columns-container__title\" >Top 10 Music</span>\n      {musics.map((music) => (\n        <CardMusic\n          key={music.id}\n          name={music.title}\n          date={music.releaseDate}\n          image={music.picture}\n          song={music.file}\n          nbLike={music.nbLike} \n          nbListened={music.nbListened} \n          baseApiUrl={baseApiUrl}     \n        />\n      ))}\n    </div>\n    \n    <div className='columns-container columns-container__col-2'>\n          \n      <span className=\"columns-container__title\" >Top 10 Artistes</span>\n      {users.map((user) => (\n        <CardUser\n          key={user.name}\n          name={user.name}\n          description={user.description}\n          image={user.picture}\n          label={user.label} \n          certification={user.certification} \n          baseApiUrl={baseApiUrl}            \n        />\n      ))}\n    </div>\n    \n    <div className='columns-container columns-container__col-3'>\n          \n      <span className=\"columns-container__title\" >Top 10 Playlist</span>\n      {playlists.map((playlist) => (\n        <CardPlaylist\n          key={playlist.description}\n          name={playlist.name}\n          description={playlist.description}\n          image={playlist.picture}   \n          nbLike={playlist.nbLike} \n          album={playlist.album}  \n          createdAt={playlist.createdAt}\n          baseApiUrl={baseApiUrl}     \n        />\n      ))}\n    </div>\n\n  </section> \n\n  );\n};\n\nColumns.propTypes = {\n  baseApiUrl: PropTypes.string.isRequired,\n}\n\nexport default Columns;"]},"metadata":{},"sourceType":"module"}
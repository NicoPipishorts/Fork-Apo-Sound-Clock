{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios'; // == IMPORT ASSETS\n\nimport { LOGIN, GET_USER_WITH_SLUG, saveUserWithSlug, GET_LOGGED_USER, saveLoggedUser, getLoggedUser } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        // console.log('etape : 3 je passe par le middleware login je vais au get user');\n        const {\n          users: {\n            username,\n            password\n          }\n        } = store.getState(); // Send request with User Login for JWT Token\n\n        axios.post(`${baseURL}/api/login_check`, {\n          username,\n          password\n        }).then(response => {\n          localStorage.setItem('userToken', response.data.token); // console.log('etape : 4 réponse positive je passe au reducer');\n\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n          const payload = JSON.parse(jsonPayload);\n          store.dispatch(getLoggedUser(payload.slug));\n        }).catch(error => console.log('Login error : ', error));\n      }\n      break;\n\n    case GET_USER_WITH_SLUG:\n      // console.log('Get User With slug prop passed to middleware ',action.slug);\n      // console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        console.log('je suis le response du get user with slug', response);\n        store.dispatch(saveUserWithSlug(response.data));\n      }).catch(() => console.log('Get User By Slug Error'));\n      break;\n    //* Action Type to recover logged user from Token\n\n    case GET_LOGGED_USER:\n      // console.log('voici la route de l\\'api pour get logged user: ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        //console.log('je suis le response du get user with slug', response.data);\n        store.dispatch(saveLoggedUser(response.data));\n      }).catch(error => console.log('Get Logged User by Slug : error : ', error));\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","LOGIN","GET_USER_WITH_SLUG","saveUserWithSlug","GET_LOGGED_USER","saveLoggedUser","getLoggedUser","baseURL","authMiddleWare","store","next","action","type","users","username","password","getState","post","then","response","localStorage","setItem","data","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","dispatch","slug","catch","error","console","log","get"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, \n  GET_USER_WITH_SLUG,\n  saveUserWithSlug,\n  GET_LOGGED_USER,\n  saveLoggedUser,\n  getLoggedUser,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      // console.log('etape : 3 je passe par le middleware login je vais au get user');\n      const { users: { username, password } } = store.getState();\n\n      // Send request with User Login for JWT Token\n      axios.post(`${baseURL}/api/login_check`, {\n        username,\n        password,\n      }).then(\n        (response) => {\n          localStorage.setItem('userToken', response.data.token);\n\n          // console.log('etape : 4 réponse positive je passe au reducer');\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n\n          const payload =  JSON.parse(jsonPayload);\n          \n          store.dispatch(getLoggedUser(payload.slug));   \n        },\n        ).catch(\n          (error) => console.log('Login error : ' , error),\n      );\n    }\n    break;\n\n    case GET_USER_WITH_SLUG: \n\n      // console.log('Get User With slug prop passed to middleware ',action.slug);\n      // console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          console.log('je suis le response du get user with slug', response);\n          store.dispatch(saveUserWithSlug(response.data));   \n        },\n      ).catch(\n        () => console.log('Get User By Slug Error'),\n      );\n\n    break;\n    \n    //* Action Type to recover logged user from Token\n    case GET_LOGGED_USER: \n\n      // console.log('voici la route de l\\'api pour get logged user: ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          //console.log('je suis le response du get user with slug', response.data);\n          store.dispatch(saveLoggedUser(response.data));   \n        },\n      ).catch(\n        (error) => console.log('Get Logged User by Slug : error : ', error),\n      );\n      \n    break;\n    \n  default:\n    next(action);\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}
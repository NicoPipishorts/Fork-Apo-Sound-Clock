{"ast":null,"code":"import { SET_MUSIC_FIELD, SET_MUSICS_LIST, RESET_MUSIC_STATE, SET_PROGRESS, SET_ERROR_CODE } from '../actions/musics';\nexport const initialState = {\n  users: userReducer,\n  // title of the file to upload\n  title: '',\n  // file to upload\n  file: '',\n  // cover photo for the song\n  picture: '',\n  // description of music to upload\n  description: '',\n  // initial release date of the song\n  releaseDate: '',\n  // is the song visible or not\n  status: '1',\n  // empty object for storing the musics list\n  list: [],\n  progress: '',\n  errorCode: ''\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_MUSIC_FIELD:\n      return { ...state,\n        // pour définir dynamiquement la propriété d'un objet, on utilise la\n        // notation \"crochet\"\n        [action.name]: action.value\n      };\n\n    case SET_MUSICS_LIST:\n      return { ...state,\n        list: action.musicList\n      };\n\n    case RESET_MUSIC_STATE:\n      return { ...state,\n        title: '',\n        file: '',\n        picture: '',\n        description: '',\n        releaseDate: ''\n      };\n\n    case SET_PROGRESS:\n      return { ...state,\n        progress: action.progress\n      };\n\n    case SET_ERROR_CODE:\n      return { ...state,\n        errorCode: action.code\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/musics.js"],"names":["SET_MUSIC_FIELD","SET_MUSICS_LIST","RESET_MUSIC_STATE","SET_PROGRESS","SET_ERROR_CODE","initialState","users","userReducer","title","file","picture","description","releaseDate","status","list","progress","errorCode","reducer","state","action","type","name","value","musicList","code"],"mappings":"AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,mBANP;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAEC,WADmB;AAE1B;AACAC,EAAAA,KAAK,EAAE,EAHmB;AAI1B;AACAC,EAAAA,IAAI,EAAE,EALoB;AAM1B;AACAC,EAAAA,OAAO,EAAE,EAPiB;AAQ1B;AACAC,EAAAA,WAAW,EAAE,EATa;AAU1B;AACAC,EAAAA,WAAW,EAAE,EAXa;AAY1B;AACAC,EAAAA,MAAM,EAAE,GAbkB;AAc1B;AACAC,EAAAA,IAAI,EAAG,EAfmB;AAgB1BC,EAAAA,QAAQ,EAAE,EAhBgB;AAiB1BC,EAAAA,SAAS,EAAC;AAjBgB,CAArB,C,CAoBP;;AACA,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9Bb,YAA8B;AAAA,MAAhBc,MAAgB,uEAAP,EAAO;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,eAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAEL;AACA;AACA,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAJjB,OAAP;;AAOF,SAAKrB,eAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAFR,OAAP;;AAKF,SAAKrB,iBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELV,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,OAAO,EAAE,EAJJ;AAKLC,QAAAA,WAAW,EAAE,EALR;AAMLC,QAAAA,WAAW,EAAE;AANR,OAAP;;AASD,SAAKT,YAAL;AACC,aAAM,EACJ,GAAGe,KADC;AAEJH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFb,OAAN;;AAIA,SAAKX,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,SAAS,EAAEG,MAAM,CAACK;AAFb,OAAP;;AAKJ;AACE,aAAON,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import {\n  SET_MUSIC_FIELD, \n  SET_MUSICS_LIST,\n  RESET_MUSIC_STATE,\n  SET_PROGRESS,\n  SET_ERROR_CODE\n} from '../actions/musics';\n\nexport const initialState = {\n  users: userReducer,\n  // title of the file to upload\n  title: '',\n  // file to upload\n  file: '',\n  // cover photo for the song\n  picture: '',\n  // description of music to upload\n  description: '',\n  // initial release date of the song\n  releaseDate: '',\n  // is the song visible or not\n  status: '1',\n  // empty object for storing the musics list\n  list : [],\n  progress: '',\n  errorCode:''\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case SET_MUSIC_FIELD:\n      return {\n        ...state,\n        // pour définir dynamiquement la propriété d'un objet, on utilise la\n        // notation \"crochet\"\n        [action.name]: action.value,\n      };\n\n    case SET_MUSICS_LIST:\n      return {\n        ...state,\n        list: action.musicList,\n      };\n      \n    case RESET_MUSIC_STATE:\n      return {\n        ...state,\n        title: '',\n        file: '',\n        picture: '',\n        description: '',\n        releaseDate: '',\n      };\n\n     case SET_PROGRESS: \n      return{\n        ...state,\n        progress: action.progress,\n      };\n      case SET_ERROR_CODE:\n        return {\n          ...state,\n          errorCode: action.code,\n        }  \n\n    default:\n      return state;\n  }\n};\n\nexport default reducer; "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\"; // == IMPORT ASSETS\n\nimport { CREATE_USER, GET_USERS_LIST, setErrorMailCreate, setUsersList, UPDATE_PROFILE } from '../actions/user';\n\nconst usersApi = store => next => action => {\n  const {\n    users: {\n      email,\n      password,\n      name,\n      picture,\n      description,\n      user\n    }\n  } = store.getState();\n  const formData = new FormData();\n  formData.append('file', picture);\n  formData.append('description', description);\n  formData.append('name', name);\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      store.dispatch(setProgress(Math.round(100 * data.loaded / data.total)));\n    }\n  };\n  const baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\n  switch (action.type) {\n    case CREATE_USER:\n      axios.post(`${baseURL}/api/user/new`, {\n        email,\n        name,\n        password\n      }, config).then(response => {\n        console.log('Le data a était envoyé, all is good.', response);\n      }).catch(error => {\n        store.dispatch(setErrorMailCreate(error.response.data.error));\n        console.log(\"je suis la reponse.status\", error.response.data.error);\n        console.log('error nul', error);\n      });\n      break;\n\n    case GET_USERS_LIST:\n      axios.get(`${baseURL}/api/users/rand`).then(response => {\n        store.dispatch(setUsersList(response.data));\n      }).catch(error => {\n        // eslint-disable-next-line no-console\n        console.log('error', error);\n      });\n      break;\n\n    case UPDATE_PROFILE:\n      console.log('je récupére bien les info dans le middleware user : ', name, picture, description, user.id);\n      axios.post(`${baseURL}/api/user/edit/${user.id}`, formData, config).then(response => {\n        console.log('Le data a était envoyé, all is good.', response);\n      }).catch(error => {\n        store.dispatch(setErrorMailCreate(error.response.data.error));\n        console.log(\"je suis la reponse.status\", error.response.data.error);\n        console.log('error nul', error);\n      });\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default usersApi;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/usersApi.js"],"names":["axios","FormData","CREATE_USER","GET_USERS_LIST","setErrorMailCreate","setUsersList","UPDATE_PROFILE","usersApi","store","next","action","users","email","password","name","picture","description","user","getState","formData","append","config","headers","onUploadProgress","data","dispatch","setProgress","Math","round","loaded","total","baseURL","type","post","then","response","console","log","catch","error","get","id"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\n// == IMPORT ASSETS\nimport {\n  CREATE_USER,\n  GET_USERS_LIST, \n  setErrorMailCreate, \n  setUsersList,\n  UPDATE_PROFILE,\n} from '../actions/user';\n\nconst usersApi = (store) => (next) => (action) =>{\n\n  const { users : {\n    email,\n    password,\n    name,\n    picture,\n    description,\n    user\n  }} = store.getState();\n      \n  const formData = new FormData();\n  formData.append('file', picture);\n  formData.append('description', description);\n  formData.append('name', name);\n\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      \n      //Set the progress value to show the progress bar\n      store.dispatch(setProgress(Math.round((100 * data.loaded) / data.total)))\n      \n    }\n\n  };\n\n  const baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\n  switch (action.type) {\n   \n    case CREATE_USER:\n      axios.post(`${baseURL}/api/user/new` , {\n        email,\n        name,\n        password  \n      }, config\n        ).then((response) => {\n          console.log('Le data a était envoyé, all is good.',response);\n        })\n        .catch((error) => {\n          store.dispatch(setErrorMailCreate(error.response.data.error))\n          console.log(\"je suis la reponse.status\",error.response.data.error);\n          console.log('error nul', error);\n        });\n      break;\n\n    case GET_USERS_LIST: \n      axios.get(`${baseURL}/api/users/rand`)\n      .then((response) => {\n          store.dispatch(setUsersList(response.data));\n        })\n      .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log('error', error);\n        });\n      break;\n\n    case UPDATE_PROFILE:\n        console.log('je récupére bien les info dans le middleware user : ', name, picture, description, user.id);\n        axios.post(`${baseURL}/api/user/edit/${user.id}`,\n        formData, \n        config\n          ).then((response) => {\n            console.log('Le data a était envoyé, all is good.',response);\n          })\n          .catch((error) => {\n            store.dispatch(setErrorMailCreate(error.response.data.error))\n            console.log(\"je suis la reponse.status\",error.response.data.error);\n            console.log('error nul', error);\n          });\n      break;\n    default:\n    next(action);   \n  }\n};\nexport default usersApi;"]},"metadata":{},"sourceType":"module"}
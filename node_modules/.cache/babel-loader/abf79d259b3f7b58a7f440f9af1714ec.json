{"ast":null,"code":"var _s = $RefreshSig$();\n\n// == IMPORT NPM\nimport React, { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Icon } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\"; // == IMPORT ASSETS\n\nimport ModalAddMusic from \"./ModalAddMusic\";\nimport ModalUpdateProfile from \"./ModalUpdateProfile\";\nimport { setMusicField, sendMusic } from '../../actions/musics';\nimport Music from \"../Cards/Music\";\nimport Playlist from \"../Cards/Playlist\";\nimport { getUserWithSlug } from \"../../actions/user\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  _s();\n\n  let {\n    avatar,\n    baseApiUrl\n  } = _ref;\n  const dispatch = useDispatch(); //* useParams used to pickup the slug is the user is not logged\n\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    dispatch(getUserWithSlug(slug));\n    console.log('useEffect ???');\n  }, []);\n  /*\n  //* Logged status retrieval\n  const logged = useSelector((state) => state.users.logged);\n  //* Modal State values for controled fields\n  const modalTitle = useSelector((state) => state.musics.title);\n  const modalFile = useSelector((state) => state.musics.file);\n  const modalPicture = useSelector((state) => state.musics.picture);\n  const modalReleaseDate = useSelector((state) => state.musics.releaseDate);\n  const modalDescription = useSelector((state) => state.musics.description);\n  const progressUpload = useSelector((state) => state.musics.progress );\n  const errorCode = useSelector((state) => state.musics.errorCode);\n  let userData;\n  //* clicked User data\n  const clickedUser  =  useSelector((state) => state.users.clickedUser);\n  // console.log('je suis sur la page user, je suis la valuer du clockedUser : ', clickedUser);\n  //* logged in User data\n  const loggedUser = useSelector((state) => state.users.user);\n  //console.log('je suis sur la page user, je suis la valuer du loggedUser : ', loggedUser);\n  // const usersList = useSelector((state) => state.users.list);\n  // console.log('je suis sur la page user, voici la liste de user:' , usersList);\n  //* User Data retreival from the state\n  if((clickedUser)){\n  userData = clickedUser;\n  console.log(' je suis le user data du clicked user : ', userData);\n  } else {\n  userData = loggedUser;\n  console.log(' je suis le user data du logged user : ', userData);\n  }\n  const changeField = (value, name) => {\n  //console.log(`Je veux modifier le champ ${name} avec la valeur ${value}`);\n  dispatch(setMusicField(value, name));\n  };\n  const handleAddMusic = (dateValue) => {\n  // console.log('Je veux me logger (au moins essayer)');\n  dispatch(sendMusic(dateValue));\n  };\n   //TODO Picking up the musics results for the user from the user musics API\n  const musics = userData.musics;\n  const playlists = userData.playlists;\n  const certificationIcon = <Icon name='certificate' size='tiny' color='grey' className='card__content--h1-cert' />;\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(User, \"xatVnYCNcEcuu1XJ2Uxoji7W24M=\", false, function () {\n  return [useDispatch, useParams];\n});\n\n_c = User;\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/User/index.js"],"names":["React","useEffect","useParams","PropTypes","Container","Icon","useSelector","useDispatch","ModalAddMusic","ModalUpdateProfile","setMusicField","sendMusic","Music","Playlist","getUserWithSlug","User","avatar","baseApiUrl","dispatch","slug","console","log","propTypes","string","isRequired"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAGA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,sBAAzC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;;AAEA,MAAMC,IAAI,GAAG,QAA6B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA2B;AAExC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAFwC,CAIxC;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWjB,SAAS,EAA1B;AACAD,EAAAA,SAAS,CACP,MAAM;AACJiB,IAAAA,QAAQ,CAACJ,eAAe,CAACK,IAAD,CAAhB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GAJM,EAIJ,EAJI,CAAT;AAOE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUE,sBACE,qCADF;AAMD,CArED;;GAAMN,I;UAEaR,W,EAGAL,S;;;KALba,I;AAuENA,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,MAAM,EAAEb,SAAS,CAACoB,MAAV,CAAiBC;AADV,CAAjB;AAKA,eAAeT,IAAf","sourcesContent":["// == IMPORT NPM\nimport React, { useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Icon } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\n// == IMPORT ASSETS\nimport ModalAddMusic from \"./ModalAddMusic\";\nimport ModalUpdateProfile from \"./ModalUpdateProfile\";\nimport { setMusicField, sendMusic } from '../../actions/musics';\nimport Music from \"../Cards/Music\";\nimport Playlist from \"../Cards/Playlist\";\nimport { getUserWithSlug } from \"../../actions/user\";\n\nconst User = ( { avatar, baseApiUrl }) => { \n\n  const dispatch = useDispatch();\n\n  //* useParams used to pickup the slug is the user is not logged\n  const { slug } = useParams();\n  useEffect(\n    () => {\n      dispatch(getUserWithSlug(slug));\n      console.log('useEffect ???');\n    }, []\n  );\n\n    /*\n  //* Logged status retrieval\n  const logged = useSelector((state) => state.users.logged);\n\n  //* Modal State values for controled fields\n  const modalTitle = useSelector((state) => state.musics.title);\n  const modalFile = useSelector((state) => state.musics.file);\n  const modalPicture = useSelector((state) => state.musics.picture);\n  const modalReleaseDate = useSelector((state) => state.musics.releaseDate);\n  const modalDescription = useSelector((state) => state.musics.description);\n  const progressUpload = useSelector((state) => state.musics.progress );\n  const errorCode = useSelector((state) => state.musics.errorCode);\n\n  let userData;\n\n  //* clicked User data\n  const clickedUser  =  useSelector((state) => state.users.clickedUser);\n  // console.log('je suis sur la page user, je suis la valuer du clockedUser : ', clickedUser);\n  //* logged in User data\n  const loggedUser = useSelector((state) => state.users.user);\n  //console.log('je suis sur la page user, je suis la valuer du loggedUser : ', loggedUser);\n\n  // const usersList = useSelector((state) => state.users.list);\n  // console.log('je suis sur la page user, voici la liste de user:' , usersList);\n\n  //* User Data retreival from the state\n  if((clickedUser)){\n    userData = clickedUser;\n    console.log(' je suis le user data du clicked user : ', userData);\n  } else {\n    userData = loggedUser;\n    console.log(' je suis le user data du logged user : ', userData);\n  }\n\n  const changeField = (value, name) => {\n    //console.log(`Je veux modifier le champ ${name} avec la valeur ${value}`);\n    dispatch(setMusicField(value, name));\n  };\n\n  const handleAddMusic = (dateValue) => {\n    // console.log('Je veux me logger (au moins essayer)');\n    dispatch(sendMusic(dateValue));\n  };\n  \n  //TODO Picking up the musics results for the user from the user musics API\n  const musics = userData.musics;\n  const playlists = userData.playlists;\n\n  const certificationIcon = <Icon name='certificate' size='tiny' color='grey' className='card__content--h1-cert' />;\n  */\n  return (\n    <>\n    </>\n\n  );\n\n};\n\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired,\n}\n\n\nexport default User;"]},"metadata":{},"sourceType":"module"}
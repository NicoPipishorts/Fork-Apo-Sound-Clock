{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/User/index.js\",\n    _s = $RefreshSig$();\n\n// == IMPORT NPM\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Icon } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\"; // == IMPORT ASSETS\n\nimport ModalAddMusic from \"./ModalAddMusic\";\nimport ModalUpdateProfile from \"./ModalUpdateProfile\";\nimport { setMusicField, sendMusic } from '../../actions/musics';\nimport Music from \"../Cards/Music\";\nimport Playlist from \"../Cards/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  _s();\n\n  let {\n    avatar,\n    baseApiUrl\n  } = _ref;\n  const dispatch = useDispatch(); //* Logged status retrieval\n\n  const logged = useSelector(state => state.users.logged);\n  console.log('I am logged or not? : ', logged); //* Modal State values for controled fields\n\n  const modalTitle = useSelector(state => state.musics.title);\n  const modalFile = useSelector(state => state.musics.file);\n  const modalPicture = useSelector(state => state.musics.picture);\n  const modalReleaseDate = useSelector(state => state.musics.releaseDate);\n  const modalDescription = useSelector(state => state.musics.description); // const modalStatus = useSelector((state) => state.musics.status);\n  //* useParams used to pickup the slug is the user is not logged\n\n  const {\n    slug\n  } = useParams(); //* User Data retreival from the state\n\n  const userData = useSelector(state => state.users.user);\n  console.log('je suis sur la page user, voici mon data:', userData);\n\n  const changeField = (value, name) => {\n    //console.log(`Je veux modifier le champ ${name} avec la valeur ${value}`);\n    dispatch(setMusicField(value, name));\n  };\n\n  const handleAddMusic = () => {\n    // console.log('Je veux me logger (au moins essayer)');\n    dispatch(sendMusic());\n  }; //TODO Picking up the musics results for the user from the user musics API\n\n\n  const musics = userData.musics;\n  const playlists = userData.playlists;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"user-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__avatar--container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__avatar\",\n          style: {\n            \"backgroundImage\": `url(${userData.picture})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), logged && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__modifyUser-btn\",\n            children: /*#__PURE__*/_jsxDEV(ModalUpdateProfile, {\n              title: modalTitle,\n              file: modalFile,\n              picture: modalPicture,\n              releaseDate: modalReleaseDate,\n              description: modalDescription,\n              changeField: changeField,\n              handleAddMusic: handleAddMusic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"user__header-container\",\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!logged && !slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name-noUser\",\n              children: \"Aucun utilisateur de trouv\\xE9.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false), logged && !slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name\",\n              children: [\"Welcome \", userData.name, userData.certification && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"certificate\",\n                  size: \"tiny\",\n                  color: \"teal\",\n                  className: \"card__content--h1-cert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false), logged && slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name\",\n              children: [\"Welcome \", userData.name, userData.certification && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"certificate\",\n                  size: \"tiny\",\n                  color: \"teal\",\n                  className: \"card__content--h1-cert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false), !logged && slug && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user__header--name\",\n              children: [\"Welcome \", slug, userData.certification && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"certificate\",\n                  size: \"tiny\",\n                  color: \"teal\",\n                  className: \"card__content--h1-cert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false)]\n        }, void 0, true), (logged || slug) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user__header--link\",\n            children: [\"http://wwww.soundclock.com/\", logged && userData.name, !logged && slug]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__header-h2\",\n            children: [\"Abonn\\xE9es:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user__header-h2--stats\",\n              children: logged && userData.subscribers.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__header-h2\",\n            children: [\"Musiques:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user__header-h2--stats\",\n              children: logged && userData.musics.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), (logged || slug) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__description\",\n            children: userData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-container\",\n      children: [logged && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content__addMusic-btn\",\n          children: /*#__PURE__*/_jsxDEV(ModalAddMusic, {\n            title: modalTitle,\n            file: modalFile,\n            picture: modalPicture,\n            releaseDate: modalReleaseDate,\n            description: modalDescription,\n            changeField: changeField,\n            handleAddMusic: handleAddMusic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)\n      }, void 0, false), (logged || slug) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"content__section-title\",\n          children: \"Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__container\",\n          children: musics.map(music => /*#__PURE__*/_jsxDEV(Music, {\n            name: music.title,\n            date: music.releaseDate,\n            image: music.picture,\n            description: music.description,\n            song: music.file,\n            nbLike: music.nbLike,\n            nbListened: music.nbListened,\n            baseApiUrl: baseApiUrl\n          }, music.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"content__section-title\",\n          children: \"Playlists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__container\",\n          children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n            name: playlist.title,\n            date: playlist.createdAt,\n            image: playlist.picture,\n            description: playlist.description,\n            nbLike: playlist.nbLike,\n            baseApiUrl: baseApiUrl\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"C9gJAuReQeCD05zewqJwT0BLavY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useParams, useSelector];\n});\n\n_c = User;\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/User/index.js"],"names":["useParams","PropTypes","Container","Icon","useSelector","useDispatch","ModalAddMusic","ModalUpdateProfile","setMusicField","sendMusic","Music","Playlist","User","avatar","baseApiUrl","dispatch","logged","state","users","console","log","modalTitle","musics","title","modalFile","file","modalPicture","picture","modalReleaseDate","releaseDate","modalDescription","description","slug","userData","user","changeField","value","name","handleAddMusic","playlists","certification","subscribers","length","map","music","nbLike","nbListened","id","playlist","createdAt","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Container, Icon } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// == IMPORT ASSETS\nimport ModalAddMusic from \"./ModalAddMusic\";\nimport ModalUpdateProfile from \"./ModalUpdateProfile\";\nimport { setMusicField, sendMusic } from '../../actions/musics';\nimport Music from \"../Cards/Music\";\nimport Playlist from \"../Cards/Playlist\";\n\nconst User = ( { avatar, baseApiUrl }) => { \n\n  const dispatch = useDispatch();\n\n  //* Logged status retrieval\n  const logged = useSelector((state) => state.users.logged);\n  console.log('I am logged or not? : ', logged);\n\n  //* Modal State values for controled fields\n  const modalTitle = useSelector((state) => state.musics.title);\n  const modalFile = useSelector((state) => state.musics.file);\n  const modalPicture = useSelector((state) => state.musics.picture);\n  const modalReleaseDate = useSelector((state) => state.musics.releaseDate);\n  const modalDescription = useSelector((state) => state.musics.description);\n  // const modalStatus = useSelector((state) => state.musics.status);\n\n  //* useParams used to pickup the slug is the user is not logged\n  const { slug } = useParams();\n\n  //* User Data retreival from the state\n  const userData = useSelector((state) => state.users.user);\n  console.log('je suis sur la page user, voici mon data:' , userData);\n\n  const changeField = (value, name) => {\n    //console.log(`Je veux modifier le champ ${name} avec la valeur ${value}`);\n    dispatch(setMusicField(value, name));\n  };\n\n  const handleAddMusic = () => {\n    // console.log('Je veux me logger (au moins essayer)');\n    dispatch(sendMusic());\n  };\n  \n  //TODO Picking up the musics results for the user from the user musics API\n  const musics = userData.musics;\n  const playlists = userData.playlists;\n  \n  return (\n\n    <div className=\"user-wrapper\">\n\n      <section className=\"user-container\">\n\n        <div className=\"user__avatar--container\">\n          \n          <div className=\"user__avatar\" style={{\"backgroundImage\": `url(${userData.picture})` }}></div>\n\n          {/* Modal to modifythe user data */}\n          { logged &&\n          <>\n            <div className=\"user__modifyUser-btn\">\n              <ModalUpdateProfile \n                title={modalTitle}\n                file={modalFile}\n                picture={modalPicture}\n                releaseDate={modalReleaseDate}\n                description={modalDescription}\n                changeField={changeField}\n                handleAddMusic={handleAddMusic}\n              />     \n            </div>\n          </>\n          }\n        </div>\n\n        <Container className=\"user__header-container\" fluid>\n          <>\n            {(!logged) && (!slug) && (\n              <>\n              <h1 className=\"user__header--name-noUser\">Aucun utilisateur de trouvé.</h1>\n              </>\n            )}\n            {((logged) && (!slug)) && (\n              <>\n              <h1 className=\"user__header--name\">Welcome {userData.name}\n              {(userData.certification) &&\n              <>\n              <Icon name='certificate' size='tiny' color='teal' className='card__content--h1-cert' />\n              </>\n              }\n              </h1>\n              </>\n            )} \n            {((logged) && (slug)) && (\n              <>\n              <h1 className=\"user__header--name\">Welcome {userData.name}\n              {(userData.certification) &&\n              <>\n              <Icon name='certificate' size='tiny' color='teal' className='card__content--h1-cert' />\n              </>\n              }\n              </h1>\n              </>\n            )} \n            {((!logged) && (slug)) && (\n              <>\n              <h1 className=\"user__header--name\">Welcome {slug}\n              {(userData.certification) &&\n              <>\n              <Icon name='certificate' size='tiny' color='teal' className='card__content--h1-cert' />\n              </>\n              }\n              </h1>\n              </>\n            )}\n          </>\n\n          {((logged) || (slug)) && (\n            <>\n              \n            <span className=\"user__header--link\">\n              http://wwww.soundclock.com/\n              {logged && userData.name } \n              {!logged && slug}\n            </span>\n            <br />\n            <br /><br />\n            <div className=\"user__header-h2\">Abonnées: \n              <span className=\"user__header-h2--stats\">\n                {logged && userData.subscribers.length}\n              </span>\n            </div> \n            <br /><br />\n            <div className=\"user__header-h2\">Musiques: \n              <span className=\"user__header-h2--stats\">\n                {logged && userData.musics.length}\n              </span>\n            </div>\n            \n            </>\n          )}\n\n        </Container>\n        \n      {((logged) || (slug)) && (\n      <>\n        <Container fluid>\n\n          <div className=\"user__description\">\n          {userData.description}\n          </div>\n\n        </Container>\n      </>\n      )}\n      </section>\n\n      <section className=\"content-container\">\n\n      {/* Modal to Upload new content, only visible if logged in */}\n      {logged &&\n      <>\n        <div className=\"content__addMusic-btn\">\n          <ModalAddMusic \n            title={modalTitle}\n            file={modalFile}\n            picture={modalPicture}\n            releaseDate={modalReleaseDate}\n            description={modalDescription}\n            changeField={changeField}\n            handleAddMusic={handleAddMusic}\n          />     \n        </div>\n      </>\n      }\n      {\n      ((logged) || (slug)) && (\n      <>\n        {/* //* User Music section */}\n        <h1 className=\"content__section-title\">Music</h1>\n        <div className=\"cards__container\">\n          {\n          musics.map((music) =>( \n            <Music\n              key={music.id}\n              name={music.title}\n              date={music.releaseDate}\n              image={music.picture}\n              description={music.description}\n              song={music.file}\n              nbLike={music.nbLike} \n              nbListened={music.nbListened} \n              baseApiUrl={baseApiUrl}   \n              />\n          ) ) \n          }\n        </div>\n        {/* //* User Playlist section */}\n        <h1 className=\"content__section-title\">Playlists</h1>\n        <div className=\"cards__container\">\n          {\n            playlists.map((playlist) =>( \n            <Playlist\n              key={playlist.id}\n              name={playlist.title}\n              date={playlist.createdAt}\n              image={playlist.picture}\n              description={playlist.description}\n              nbLike={playlist.nbLike} \n              baseApiUrl={baseApiUrl}   \n              />\n          ) ) \n          }\n        </div>\n      \n      </>\n        )}\n      </section>\n\n    </div>\n\n  );\n\n};\n\nUser.propTypes = {\n  avatar: PropTypes.string.isRequired,\n}\n\n\nexport default User;"]},"metadata":{},"sourceType":"module"}
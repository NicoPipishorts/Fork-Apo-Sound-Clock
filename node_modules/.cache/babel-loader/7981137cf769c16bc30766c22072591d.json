{"ast":null,"code":"// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\"; // == IMPORT ASSETS\n\nimport { GET_MUSICS_LIST, setMusicsList, SEND_MUSIC, resetMusicState } from '../actions/musics';\n\nconst musicApi = store => next => action => {\n  //const picture = \"test-picture\";\n  //const file = \"test-file\";\n  const {\n    musics: {\n      title,\n      file,\n      picture,\n      description,\n      releaseDate\n    }\n  } = store.getState();\n  const formData = new FormData();\n  formData.append('title', title);\n  formData.append('file', file);\n  formData.append('picture', picture);\n  formData.append('releasedate', releaseDate);\n  formData.append('description', description);\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    }\n  };\n\n  switch (action.type) {\n    case GET_MUSICS_LIST:\n      axios.get('http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public/api/musics').then(response => {\n        //console.log(response);\n        store.dispatch(setMusicsList(response.data));\n      }).catch(error => {\n        // eslint-disable-next-line no-console\n        console.log('error', error);\n      });\n      break;\n\n    case SEND_MUSIC:\n      axios.post('http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public/api/musics', formData, config).then(response => {\n        console.log('Le data a était envoyé, all is good.', response);\n        store.dispatch(resetMusicState());\n      }).catch(error => {\n        // eslint-disable-next-line no-console\n        console.log('Music Upload Error', error);\n      });\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default musicApi;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/musicApi.js"],"names":["axios","FormData","GET_MUSICS_LIST","setMusicsList","SEND_MUSIC","resetMusicState","musicApi","store","next","action","musics","title","file","picture","description","releaseDate","getState","formData","append","config","headers","type","get","then","response","dispatch","data","catch","error","console","log","post"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,eAJJ,QAKO,mBALP;;AAOA,MAAMC,QAAQ,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAW;AAE/C;AACA;AACA,QAAM;AAAEC,IAAAA,MAAM,EAAE;AACdC,MAAAA,KADc;AAEdC,MAAAA,IAFc;AAGdC,MAAAA,OAHc;AAIdC,MAAAA,WAJc;AAKdC,MAAAA;AALc;AAAV,MAMER,KAAK,CAACS,QAAN,EANR;AAQE,QAAMC,QAAQ,GAAG,IAAIhB,QAAJ,EAAjB;AACAgB,EAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyBP,KAAzB;AACAM,EAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAK,EAAAA,QAAQ,CAACC,MAAT,CAAgB,SAAhB,EAA2BL,OAA3B;AACAI,EAAAA,QAAQ,CAACC,MAAT,CAAgB,aAAhB,EAA+BH,WAA/B;AACAE,EAAAA,QAAQ,CAACC,MAAT,CAAgB,aAAhB,EAA+BJ,WAA/B;AAEA,QAAMK,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAMF,UAAQX,MAAM,CAACY,IAAf;AACE,SAAKnB,eAAL;AACEF,MAAAA,KAAK,CAACsB,GAAN,CAAU,kFAAV,EACCC,IADD,CACOC,QAAD,IAAc;AAChB;AACAjB,QAAAA,KAAK,CAACkB,QAAN,CAAetB,aAAa,CAACqB,QAAQ,CAACE,IAAV,CAA5B;AACD,OAJH,EAKCC,KALD,CAKQC,KAAD,IAAW;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,OARH;AASA;;AACA,SAAKxB,UAAL;AACEJ,MAAAA,KAAK,CAAC+B,IAAN,CACA,kFADA,EAEAd,QAFA,EAGAE,MAHA,EAGQI,IAHR,CAGcC,QAAD,IAAc;AAEvBK,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAmDN,QAAnD;AACAjB,QAAAA,KAAK,CAACkB,QAAN,CAAepB,eAAe,EAA9B;AACD,OAPH,EAQCsB,KARD,CAQQC,KAAD,IAAW;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACD,OAXH;AAYA;;AACJ;AACApB,MAAAA,IAAI,CAACC,MAAD,CAAJ;AA3BF;AA6BD,CAtDD;;AAuDA,eAAeH,QAAf","sourcesContent":["// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\n// == IMPORT ASSETS\nimport {\n    GET_MUSICS_LIST, \n    setMusicsList, \n    SEND_MUSIC,\n    resetMusicState\n} from '../actions/musics';\n\nconst musicApi = (store) => (next) => (action) =>{\n\n  //const picture = \"test-picture\";\n  //const file = \"test-file\";\n  const { musics: { \n    title, \n    file,\n    picture,\n    description,\n    releaseDate,\n    } } = store.getState();\n      \n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('file', file);\n    formData.append('picture', picture);\n    formData.append('releasedate', releaseDate);\n    formData.append('description', description);\n\n    const config = {\n      headers: {\n        \"Content-type\": \"multipart/form-data\"\n      }\n    };\n\n  switch (action.type) {\n    case GET_MUSICS_LIST: \n      axios.get('http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public/api/musics')\n      .then((response) => {\n          //console.log(response);\n          store.dispatch(setMusicsList(response.data));\n        })\n      .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log('error', error);\n        }); \n      break;\n      case SEND_MUSIC: \n        axios.post(\n        'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public/api/musics',\n        formData, \n        config).then((response) => {\n\n            console.log('Le data a était envoyé, all is good.',response);\n            store.dispatch(resetMusicState());\n          })\n        .catch((error) => {\n            // eslint-disable-next-line no-console\n            console.log('Music Upload Error', error);\n          }); \n        break;\n    default:\n    next(action);   \n  }\n};\nexport default musicApi;"]},"metadata":{},"sourceType":"module"}
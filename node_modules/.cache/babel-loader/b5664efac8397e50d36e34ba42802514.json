{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios'; // == IMPORT ASSETS\n\nimport { LOGIN, saveUser, GET_USER_WITH_SLUG, saveUserWithSlug } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        //console.log('etape : 3 je passe par le middleware login je vais au get user');\n        const {\n          users: {\n            username,\n            password\n          }\n        } = store.getState(); // declaring the payload variable\n\n        let payload; // Send request with User Login for JWT Token\n\n        axios.post(`${baseURL}/api/login_check`, {\n          username,\n          password\n        }).then(response => {\n          localStorage.setItem('itemName', response.data.token); // console.log('je suis le payload', payload);      \n\n          store.dispatch(saveUser(response.data.toke));\n        }).catch(() => console.log('Login error'));\n      }\n      break;\n\n    case GET_USER_WITH_SLUG:\n      axios.get(`${baseURL}/api/user/${action.payload.slug}`).then(response => {\n        const userInfo = [];\n        userInfo.token = action.payload.token;\n        userInfo.user = response.data;\n        console.log('je suis le response du get user with slug', userInfo);\n        store.dispatch(saveUserWithSlug(userInfo));\n      }).catch(() => console.log('Get User By Slug Error'));\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","LOGIN","saveUser","GET_USER_WITH_SLUG","saveUserWithSlug","baseURL","authMiddleWare","store","next","action","type","users","username","password","getState","payload","post","then","response","localStorage","setItem","data","token","dispatch","toke","catch","console","log","get","slug","userInfo","user"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,KADF,EAEEC,QAFF,EAGEC,kBAHF,EAIEC,gBAJF,QAKO,iBALP,C,CAOA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,uEAAhB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAL;AAAY;AACV;AACA,cAAM;AAAEU,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AAAT,YAAoCN,KAAK,CAACO,QAAN,EAA1C,CAFU,CAGV;;AACA,YAAIC,OAAJ,CAJU,CAKV;;AACAf,QAAAA,KAAK,CAACgB,IAAN,CAAY,GAAEX,OAAQ,kBAAtB,EAAyC;AACvCO,UAAAA,QADuC;AAEvCC,UAAAA;AAFuC,SAAzC,EAGGI,IAHH,CAIGC,QAAD,IAAc;AACZC,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,QAAQ,CAACG,IAAT,CAAcC,KAA/C,EADY,CAEZ;;AACAf,UAAAA,KAAK,CAACgB,QAAN,CAAerB,QAAQ,CAACgB,QAAQ,CAACG,IAAT,CAAcG,IAAf,CAAvB;AACD,SARH,EASEC,KATF,CAUE,MAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAVR;AAaD;AACD;;AACA,SAAKxB,kBAAL;AAEEH,MAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAEvB,OAAQ,aAAYI,MAAM,CAACM,OAAP,CAAec,IAAK,EAArD,EAAwDZ,IAAxD,CACGC,QAAD,IAAc;AACZ,cAAMY,QAAQ,GAAG,EAAjB;AACAA,QAAAA,QAAQ,CAACR,KAAT,GAAiBb,MAAM,CAACM,OAAP,CAAeO,KAAhC;AACAQ,QAAAA,QAAQ,CAACC,IAAT,GAAgBb,QAAQ,CAACG,IAAzB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDG,QAAzD;AACAvB,QAAAA,KAAK,CAACgB,QAAN,CAAenB,gBAAgB,CAAC0B,QAAD,CAA/B;AACD,OAPH,EAQEL,KARF,CASE,MAAMC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CATR;AAYF;;AACF;AACEnB,MAAAA,IAAI,CAACC,MAAD,CAAJ;AAtCF;AAwCD,CAzCD;;AA2CA,eAAeH,cAAf","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, \n  saveUser, \n  GET_USER_WITH_SLUG,\n  saveUserWithSlug,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      //console.log('etape : 3 je passe par le middleware login je vais au get user');\n      const { users: { username, password } } = store.getState();\n      // declaring the payload variable\n      let payload;\n      // Send request with User Login for JWT Token\n      axios.post(`${baseURL}/api/login_check`, {\n        username,\n        password,\n      }).then(\n        (response) => {\n          localStorage.setItem('itemName', response.data.token)\n          // console.log('je suis le payload', payload);      \n          store.dispatch(saveUser(response.data.toke));   \n        },\n      ).catch(\n        () => console.log('Login error'),\n      );\n\n    }\n    break;\n    case GET_USER_WITH_SLUG: \n\n      axios.get(`${baseURL}/api/user/${action.payload.slug}`).then(\n        (response) => {\n          const userInfo = [];\n          userInfo.token = action.payload.token;\n          userInfo.user = response.data;\n          console.log('je suis le response du get user with slug', userInfo);\n          store.dispatch(saveUserWithSlug(userInfo));   \n        },\n      ).catch(\n        () => console.log('Get User By Slug Error'),\n      );\n\n    break;\n  default:\n    next(action);\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}
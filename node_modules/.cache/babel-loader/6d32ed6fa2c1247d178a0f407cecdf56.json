{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios'; // == IMPORT ASSETS\n\nimport { LOGIN, GET_USER_WITH_SLUG, saveUserWithSlug, GET_LOGGED_USER, saveLoggedUser, getLoggedUser } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        console.log('etape : 3 je passe par le middleware login je vais au get user');\n        const {\n          users: {\n            email,\n            password\n          }\n        } = store.getState(); // Send request with User Login for JWT Token\n\n        /*\n        axios.post(`${baseURL}/api/login_check`, {\n          email,\n          password,\n        }).then(\n          (response) => {\n            localStorage.setItem('userToken', response.data.token);\n             // console.log('etape : 4 réponse positive je passe au reducer');\n            const token = response.data.token;\n            let base64Url = token.split('.')[1];\n            let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n            let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            }).join(''));\n             const payload =  JSON.parse(jsonPayload);\n            \n            store.dispatch(getLoggedUser(payload.slug));   \n          },\n          ).catch(\n            (error) => console.log('Login error : ' , error),\n          );\n          */\n      }\n      break;\n\n    case GET_USER_WITH_SLUG:\n      // console.log('Get User With slug prop passed to middleware ',action.slug);\n      // console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        //console.log('je suis le response du get user with slug', response);\n        store.dispatch(saveUserWithSlug(response.data));\n      }).catch(() => console.log('Get User By Slug Error'));\n      break;\n    //* Action Type to recover logged user from Token\n\n    case GET_LOGGED_USER:\n      // console.log('voici la route de l\\'api pour get logged user: ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(response => {\n        //console.log('je suis le response du get user with slug', response.data);\n        store.dispatch(saveLoggedUser(response.data));\n      }).catch(error => console.log('Get Logged User by Slug : error : ', error));\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","LOGIN","GET_USER_WITH_SLUG","saveUserWithSlug","GET_LOGGED_USER","saveLoggedUser","getLoggedUser","baseURL","authMiddleWare","store","next","action","type","console","log","users","email","password","getState","get","slug","then","response","dispatch","data","catch","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,KADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,aANF,QAOO,iBAPP,C,CASA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,uEAAhB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,KAAL;AAAY;AACVY,QAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACA,cAAM;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAF;AAASC,YAAAA;AAAT;AAAT,YAAiCR,KAAK,CAACS,QAAN,EAAvC,CAFU,CAIV;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK;AACD;;AAEA,SAAKhB,kBAAL;AAEE;AACA;AACAF,MAAAA,KAAK,CAACmB,GAAN,CAAW,GAAEZ,OAAQ,aAAYI,MAAM,CAACS,IAAK,EAA7C,EAAgDC,IAAhD,CACGC,QAAD,IAAc;AACZ;AACAb,QAAAA,KAAK,CAACc,QAAN,CAAepB,gBAAgB,CAACmB,QAAQ,CAACE,IAAV,CAA/B;AACD,OAJH,EAKEC,KALF,CAME,MAAMZ,OAAO,CAACC,GAAR,CAAY,wBAAZ,CANR;AASF;AAEA;;AACA,SAAKV,eAAL;AAEE;AACAJ,MAAAA,KAAK,CAACmB,GAAN,CAAW,GAAEZ,OAAQ,aAAYI,MAAM,CAACS,IAAK,EAA7C,EAAgDC,IAAhD,CACGC,QAAD,IAAc;AACZ;AACAb,QAAAA,KAAK,CAACc,QAAN,CAAelB,cAAc,CAACiB,QAAQ,CAACE,IAAV,CAA7B;AACD,OAJH,EAKEC,KALF,CAMGC,KAAD,IAAWb,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDY,KAAlD,CANb;AASF;;AAEF;AACEhB,MAAAA,IAAI,CAACC,MAAD,CAAJ;AAhEF;AAkED,CAnED;;AAqEA,eAAeH,cAAf","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, \n  GET_USER_WITH_SLUG,\n  saveUserWithSlug,\n  GET_LOGGED_USER,\n  saveLoggedUser,\n  getLoggedUser,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      console.log('etape : 3 je passe par le middleware login je vais au get user');\n      const { users: { email, password } } = store.getState();\n\n      // Send request with User Login for JWT Token\n      /*\n      axios.post(`${baseURL}/api/login_check`, {\n        email,\n        password,\n      }).then(\n        (response) => {\n          localStorage.setItem('userToken', response.data.token);\n\n          // console.log('etape : 4 réponse positive je passe au reducer');\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n\n          const payload =  JSON.parse(jsonPayload);\n          \n          store.dispatch(getLoggedUser(payload.slug));   \n        },\n        ).catch(\n          (error) => console.log('Login error : ' , error),\n        );\n        */\n    }\n    break;\n\n    case GET_USER_WITH_SLUG: \n\n      // console.log('Get User With slug prop passed to middleware ',action.slug);\n      // console.log('voici la route de l\\'api : ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          //console.log('je suis le response du get user with slug', response);\n          store.dispatch(saveUserWithSlug(response.data));   \n        },\n      ).catch(\n        () => console.log('Get User By Slug Error'),\n      );\n\n    break;\n    \n    //* Action Type to recover logged user from Token\n    case GET_LOGGED_USER: \n\n      // console.log('voici la route de l\\'api pour get logged user: ', `${baseURL}/api/user/${action.slug}`);\n      axios.get(`${baseURL}/api/user/${action.slug}`).then(\n        (response) => {\n          //console.log('je suis le response du get user with slug', response.data);\n          store.dispatch(saveLoggedUser(response.data));   \n        },\n      ).catch(\n        (error) => console.log('Get Logged User by Slug : error : ', error),\n      );\n      \n    break;\n    \n  default:\n    next(action);\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}
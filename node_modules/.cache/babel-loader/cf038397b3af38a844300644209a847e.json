{"ast":null,"code":"import { LOGOUT, CREATE_USER, SET_USER_FIELD, SET_USERS_LIST, SAVE_USER, CHANGE_MODAL_STATE, SAVE_USER_WITH_SLUG, SHOW_USER_LANDING, HIDE_USER_LANDING, SET_TOP_USERS_LIST } from '../actions/user';\nexport const initialState = {\n  // l'utilisateur est-il loggé\n  logged: false,\n  // token de l'utilisateur \n  token: '',\n  // email de l'utilisateur\n  username: '',\n  // object with user deails\n  user: [],\n  // password de l'utilisateur\n  password: '',\n  //email\n  email: '',\n  //description\n  decription: '',\n  // Users List\n  list: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  // this is the landing page button state\n  btnState: false,\n  isActive: false,\n  //Open or Close Create Modal\n  createButton: false,\n  // empty object for storing the top users list\n  topList: []\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CREATE_USER:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USER_FIELD:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USERS_LIST:\n      return { ...state,\n        list: action.usersList\n      };\n\n    case SET_TOP_USERS_LIST:\n      return { ...state,\n        topList: action.usersList\n      };\n\n    case CHANGE_MODAL_STATE:\n      return { ...state,\n        [action.name]: !state[action.name]\n      };\n\n    case SAVE_USER:\n      console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        logged: true,\n        email: action.user.username,\n        token: action.user.token,\n        user: action.user\n      };\n\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        user: action.user\n      };\n\n    case LOGOUT:\n      return {\n        logged: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        decription: '',\n        token: ''\n      };\n\n    case SHOW_USER_LANDING:\n      return { ...state,\n        isActive: true\n      };\n\n    case HIDE_USER_LANDING:\n      return { ...state,\n        isActive: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/user.js"],"names":["LOGOUT","CREATE_USER","SET_USER_FIELD","SET_USERS_LIST","SAVE_USER","CHANGE_MODAL_STATE","SAVE_USER_WITH_SLUG","SHOW_USER_LANDING","HIDE_USER_LANDING","SET_TOP_USERS_LIST","initialState","logged","token","username","user","password","email","decription","list","loginButton","btnState","isActive","createButton","topList","reducer","state","action","type","name","value","usersList","console","log"],"mappings":"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","sourcesContent":["import {\n  LOGOUT,\n  CREATE_USER,\n  SET_USER_FIELD, \n  SET_USERS_LIST, \n  SAVE_USER, \n  CHANGE_MODAL_STATE, \n  SAVE_USER_WITH_SLUG,\n  SHOW_USER_LANDING, \n  HIDE_USER_LANDING,\n  SET_TOP_USERS_LIST\n} from '../actions/user';\n\nexport const initialState = {\n  // l'utilisateur est-il loggé\n  logged: false,\n  // token de l'utilisateur \n  token: '',\n  // email de l'utilisateur\n  username: '',\n  // object with user deails\n  user: [],\n  // password de l'utilisateur\n  password: '',\n  //email\n  email:'',\n  //description\n  decription:'',\n  // Users List\n  list: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  // this is the landing page button state\n  btnState: false,\n\n  isActive: false,\n  //Open or Close Create Modal\n  createButton: false,\n  // empty object for storing the top users list\n  \n  topList: [],\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CREATE_USER:\n      return{\n        ...state,\n        [action.name]: action.value,\n\n      };\n\n    case SET_USER_FIELD:\n      return {\n        ...state,\n        [action.name]: action.value,\n      };\n\n    case SET_USERS_LIST:\n      return {\n        ...state,\n        list: action.usersList,\n      };\n    case SET_TOP_USERS_LIST:\n      return {\n        ...state,\n        topList: action.usersList,\n      };\n    case CHANGE_MODAL_STATE:\n      return{\n        ...state,\n        [action.name]: !state[action.name],\n      };   \n    case SAVE_USER:\n      console.log('etape : 5, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        logged: true,        \n        email: action.user.username,\n        token: action.user.token,\n        user: action.user,\n      };\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return {\n        ...state,       \n        user: action.user,\n      };\n    case LOGOUT:\n      return {\n        logged: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        decription: '',\n        token: '',  \n      };\n    case SHOW_USER_LANDING:      \n      return {\n        ...state,\n        isActive: true,\n      };\n    case HIDE_USER_LANDING:      \n      return {\n        ...state,\n        isActive: false,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
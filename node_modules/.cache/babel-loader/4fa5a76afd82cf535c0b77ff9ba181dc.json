{"ast":null,"code":"import { SET_MUSIC_FIELD, SET_MUSICS_LIST, SHOW_MUSIC_LANDING, HIDE_MUSIC_LANDING, RESET_MUSIC_STATE } from '../actions/musics';\nexport const initialState = {\n  // title of the file to upload\n  title: '',\n  // file to upload\n  file: '',\n  // cover photo for the song\n  picture: '',\n  // description of music to upload\n  description: '',\n  // initial release date of the song\n  releaseDate: '',\n  // is the song visible or not\n  status: '1',\n  // this is the landing page button state\n  btnState: false,\n  // empty object for storing the musics list\n  list: []\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_MUSIC_FIELD:\n      return { ...state,\n        // pour définir dynamiquement la propriété d'un objet, on utilise la\n        // notation \"crochet\"\n        [action.name]: action.value\n      };\n\n    case SET_MUSICS_LIST:\n      return { ...state,\n        list: action.musicList\n      };\n\n    case RESET_MUSIC_STATE:\n      return { ...state,\n        title: '',\n        file: '',\n        picture: '',\n        description: '',\n        releaseDate: ''\n      };\n\n    case SHOW_MUSIC_LANDING:\n      console.log('je click sur le bouton music, et je dit cela depuis le reducer');\n      return { ...state,\n        btnState: true\n      };\n\n    case HIDE_MUSIC_LANDING:\n      console.log('je click sur le bouton music, et je dit cela depuis le reducer');\n      return { ...state,\n        btnState: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/musics.js"],"names":["SET_MUSIC_FIELD","SET_MUSICS_LIST","SHOW_MUSIC_LANDING","HIDE_MUSIC_LANDING","RESET_MUSIC_STATE","initialState","title","file","picture","description","releaseDate","status","btnState","list","reducer","state","action","type","name","value","musicList","console","log"],"mappings":"AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,iBALF,QAMO,mBANP;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1B;AACAC,EAAAA,KAAK,EAAE,EAFmB;AAG1B;AACAC,EAAAA,IAAI,EAAE,EAJoB;AAK1B;AACAC,EAAAA,OAAO,EAAE,EANiB;AAO1B;AACAC,EAAAA,WAAW,EAAE,EARa;AAS1B;AACAC,EAAAA,WAAW,EAAE,EAVa;AAW1B;AACAC,EAAAA,MAAM,EAAE,GAZkB;AAa1B;AACAC,EAAAA,QAAQ,EAAE,KAdgB;AAe1B;AACAC,EAAAA,IAAI,EAAG;AAhBmB,CAArB,C,CAmBP;;AACA,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BV,YAA8B;AAAA,MAAhBW,MAAgB,uEAAP,EAAO;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,eAAL;AACE,aAAO,EACL,GAAGe,KADE;AAEL;AACA;AACA,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAJjB,OAAP;;AAOF,SAAKlB,eAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAFR,OAAP;;AAIF,SAAKhB,iBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELT,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,OAAO,EAAE,EAJJ;AAKLC,QAAAA,WAAW,EAAE,EALR;AAMLC,QAAAA,WAAW,EAAE;AANR,OAAP;;AAQF,SAAKR,kBAAL;AACEmB,MAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACA,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIA,SAAKT,kBAAL;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACA,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF;AACE,aAAOG,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import {\n  SET_MUSIC_FIELD, \n  SET_MUSICS_LIST, \n  SHOW_MUSIC_LANDING, \n  HIDE_MUSIC_LANDING,\n  RESET_MUSIC_STATE\n} from '../actions/musics';\n\nexport const initialState = {\n  // title of the file to upload\n  title: '',\n  // file to upload\n  file: '',\n  // cover photo for the song\n  picture: '',\n  // description of music to upload\n  description: '',\n  // initial release date of the song\n  releaseDate: '',\n  // is the song visible or not\n  status: '1',\n  // this is the landing page button state\n  btnState: false,\n  // empty object for storing the musics list\n  list : [],\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case SET_MUSIC_FIELD:\n      return {\n        ...state,\n        // pour définir dynamiquement la propriété d'un objet, on utilise la\n        // notation \"crochet\"\n        [action.name]: action.value,\n      };\n\n    case SET_MUSICS_LIST:\n      return {\n        ...state,\n        list: action.musicList,\n      };      \n    case RESET_MUSIC_STATE:\n      return {\n        ...state,\n        title: '',\n        file: '',\n        picture: '',\n        description: '',\n        releaseDate: ''\n      }\n    case SHOW_MUSIC_LANDING:\n      console.log('je click sur le bouton music, et je dit cela depuis le reducer');\n      return {\n        ...state,\n        btnState: true,\n      }\n      case HIDE_MUSIC_LANDING:\n      console.log('je click sur le bouton music, et je dit cela depuis le reducer');\n      return {\n        ...state,\n        btnState: false,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer; "]},"metadata":{},"sourceType":"module"}
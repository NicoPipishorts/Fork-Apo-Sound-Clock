{"ast":null,"code":"import { SET_MUSIC_FIELD, SET_MUSICS_LIST, RESET_MUSIC_STATE } from '../actions/musics';\nexport const initialState = {\n  // title of the file to upload\n  title: '',\n  // file to upload\n  file: '',\n  // cover photo for the song\n  picture: '',\n  // description of music to upload\n  description: '',\n  // initial release date of the song\n  releaseDate: '',\n  // is the song visible or not\n  status: '1',\n  // empty object for storing the musics list\n  list: []\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_MUSIC_FIELD:\n      return { ...state,\n        // pour définir dynamiquement la propriété d'un objet, on utilise la\n        // notation \"crochet\"\n        [action.name]: action.value\n      };\n\n    case SET_MUSICS_LIST:\n      return { ...state,\n        list: action.musicList\n      };\n\n    case RESET_MUSIC_STAE:\n      return { ...state,\n        title: '',\n        file: '',\n        picture: '',\n        description: '',\n        releaseDate: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/musics.js"],"names":["SET_MUSIC_FIELD","SET_MUSICS_LIST","RESET_MUSIC_STATE","initialState","title","file","picture","description","releaseDate","status","list","reducer","state","action","type","name","value","musicList","RESET_MUSIC_STAE"],"mappings":"AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,iBAHF,QAIO,mBAJP;AAMA,OAAO,MAAMC,YAAY,GAAG;AAC1B;AACAC,EAAAA,KAAK,EAAE,EAFmB;AAG1B;AACAC,EAAAA,IAAI,EAAE,EAJoB;AAK1B;AACAC,EAAAA,OAAO,EAAE,EANiB;AAO1B;AACAC,EAAAA,WAAW,EAAE,EARa;AAS1B;AACAC,EAAAA,WAAW,EAAE,EAVa;AAW1B;AACAC,EAAAA,MAAM,EAAE,GAZkB;AAa1B;AACAC,EAAAA,IAAI,EAAG;AAdmB,CAArB,C,CAiBP;;AACA,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BT,YAA8B;AAAA,MAAhBU,MAAgB,uEAAP,EAAO;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,eAAL;AACE,aAAO,EACL,GAAGY,KADE;AAEL;AACA;AACA,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAJjB,OAAP;;AAOF,SAAKf,eAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAFR,OAAP;;AAKF,SAAKC,gBAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELR,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,OAAO,EAAE,EAJJ;AAKLC,QAAAA,WAAW,EAAE,EALR;AAMLC,QAAAA,WAAW,EAAE;AANR,OAAP;;AAQF;AACE,aAAOI,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["import {\n  SET_MUSIC_FIELD, \n  SET_MUSICS_LIST,\n  RESET_MUSIC_STATE\n} from '../actions/musics';\n\nexport const initialState = {\n  // title of the file to upload\n  title: '',\n  // file to upload\n  file: '',\n  // cover photo for the song\n  picture: '',\n  // description of music to upload\n  description: '',\n  // initial release date of the song\n  releaseDate: '',\n  // is the song visible or not\n  status: '1',\n  // empty object for storing the musics list\n  list : [],\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case SET_MUSIC_FIELD:\n      return {\n        ...state,\n        // pour définir dynamiquement la propriété d'un objet, on utilise la\n        // notation \"crochet\"\n        [action.name]: action.value,\n      };\n\n    case SET_MUSICS_LIST:\n      return {\n        ...state,\n        list: action.musicList,\n      };\n      \n    case RESET_MUSIC_STAE:\n      return {\n        ...state,\n        title: '',\n        file: '',\n        picture: '',\n        description: '',\n        releaseDate: ''\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer; "]},"metadata":{},"sourceType":"module"}
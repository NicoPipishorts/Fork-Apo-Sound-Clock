{"ast":null,"code":"// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\"; // == IMPORT ASSETS\n\nimport { GET_MUSICS_LIST, setMusicsList, SEND_MUSIC, resetMusicState, setProgress, setErrorCode } from '../actions/musics';\n\nconst musicApi = store => next => action => {\n  //const picture = \"test-picture\";\n  //const file = \"test-file\";\n  const {\n    musics: {\n      title,\n      file,\n      picture,\n      description,\n      releaseDate\n    }\n  } = store.getState();\n  const {\n    users: {\n      user\n    }\n  } = store.getState();\n  const formData = new FormData();\n  formData.append('title', title);\n  formData.append('user', user.id);\n  formData.append('file', file);\n  formData.append('picture', picture);\n  formData.append('releasedate', '03-03-2022'); //formData.append('releasedate', releaseDate);\n\n  formData.append('description', description);\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      store.dispatch(setProgress(Math.round(100 * data.loaded / data.total)));\n    }\n  };\n  const baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\n  switch (action.type) {\n    case GET_MUSICS_LIST:\n      axios.get(`${baseURL}/api/musics/top10/like`).then(response => {\n        console.log(\"coucou juju, me voici, la réponse de la requete: \", response);\n        store.dispatch(setMusicsList(response.data));\n      }).catch(error => {\n        // eslint-disable-next-line no-console\n        console.log('error', error);\n      });\n      break;\n\n    case SEND_MUSIC:\n      axios.post(`${baseURL}/api/musics`, formData, config).then(response => {\n        // console.log('Le data a était envoyé, all is good.',response);\n        // console.log(\"je suis la reponse.status\",response.status);\n        store.dispatch(resetMusicState(response.status));\n      })\n      /* .then((response) => {\n        console.log(\"je suis la reponse.status\",response.status);\n      }); */\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        store.dispatch(setErrorCode(error.response.data.error));\n        /* console.log(\"je suis la reponse.status\",error.response.data.error); */\n\n        console.log('Music Upload Error', error);\n      });\n      break;\n\n    default:\n      next(action);\n  }\n};\n\nexport default musicApi;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/musicApi.js"],"names":["axios","FormData","GET_MUSICS_LIST","setMusicsList","SEND_MUSIC","resetMusicState","setProgress","setErrorCode","musicApi","store","next","action","musics","title","file","picture","description","releaseDate","getState","users","user","formData","append","id","config","headers","onUploadProgress","data","dispatch","Math","round","loaded","total","baseURL","type","get","then","response","console","log","catch","error","post","status"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,eAJJ,EAKIC,WALJ,EAMIC,YANJ,QAOO,mBAPP;;AASA,MAAMC,QAAQ,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAW;AAE/C;AACA;AACA,QAAM;AAAEC,IAAAA,MAAM,EAAE;AACdC,MAAAA,KADc;AAEdC,MAAAA,IAFc;AAGdC,MAAAA,OAHc;AAIdC,MAAAA,WAJc;AAKdC,MAAAA;AALc;AAAV,MAMER,KAAK,CAACS,QAAN,EANR;AAQE,QAAM;AAAEC,IAAAA,KAAK,EAAG;AAAEC,MAAAA;AAAF;AAAV,MAAsBX,KAAK,CAACS,QAAN,EAA5B;AAEA,QAAMG,QAAQ,GAAG,IAAIpB,QAAJ,EAAjB;AACAoB,EAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyBT,KAAzB;AACAQ,EAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAhB,EAAwBF,IAAI,CAACG,EAA7B;AACAF,EAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAhB,EAAwBR,IAAxB;AACAO,EAAAA,QAAQ,CAACC,MAAT,CAAgB,SAAhB,EAA2BP,OAA3B;AACAM,EAAAA,QAAQ,CAACC,MAAT,CAAgB,aAAhB,EAA+B,YAA/B,EAnB6C,CAoB7C;;AACAD,EAAAA,QAAQ,CAACC,MAAT,CAAgB,aAAhB,EAA+BN,WAA/B;AAEA,QAAMQ,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADI;AAIbC,IAAAA,gBAAgB,EAAEC,IAAI,IAAI;AAExB;AACAlB,MAAAA,KAAK,CAACmB,QAAN,CAAetB,WAAW,CAACuB,IAAI,CAACC,KAAL,CAAY,MAAMH,IAAI,CAACI,MAAZ,GAAsBJ,IAAI,CAACK,KAAtC,CAAD,CAA1B;AAED;AATY,GAAf;AAaF,QAAMC,OAAO,GAAG,uEAAhB;;AAEA,UAAQtB,MAAM,CAACuB,IAAf;AACE,SAAKhC,eAAL;AACEF,MAAAA,KAAK,CAACmC,GAAN,CAAW,GAAEF,OAAQ,wBAArB,EACCG,IADD,CACOC,QAAD,IAAc;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ,EAAgEF,QAAhE;AACA5B,QAAAA,KAAK,CAACmB,QAAN,CAAezB,aAAa,CAACkC,QAAQ,CAACV,IAAV,CAA5B;AACD,OAJH,EAKCa,KALD,CAKQC,KAAD,IAAW;AACd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACD,OARH;AASA;;AAEF,SAAKrC,UAAL;AACEJ,MAAAA,KAAK,CAAC0C,IAAN,CACC,GAAET,OAAQ,aADX,EAEAZ,QAFA,EAGAG,MAHA,EAIEY,IAJF,CAIQC,QAAD,IAAc;AACjB;AACA;AACA5B,QAAAA,KAAK,CAACmB,QAAN,CAAevB,eAAe,CAACgC,QAAQ,CAACM,MAAV,CAA9B;AACD,OARH;AASA;AACN;AACA;AAXM,OAYCH,KAZD,CAYQC,KAAD,IAAW;AAChB;AACAhC,QAAAA,KAAK,CAACmB,QAAN,CAAerB,YAAY,CAACkC,KAAK,CAACJ,QAAN,CAAeV,IAAf,CAAoBc,KAArB,CAA3B;AACA;;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAlC;AACD,OAjBD;AAkBA;;AACF;AACA/B,MAAAA,IAAI,CAACC,MAAD,CAAJ;AAlCF;AAoCD,CA1ED;;AA2EA,eAAeH,QAAf","sourcesContent":["// == IMPORT NPM\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\n// == IMPORT ASSETS\nimport {\n    GET_MUSICS_LIST, \n    setMusicsList, \n    SEND_MUSIC,\n    resetMusicState,\n    setProgress,\n    setErrorCode\n} from '../actions/musics';\n\nconst musicApi = (store) => (next) => (action) =>{\n\n  //const picture = \"test-picture\";\n  //const file = \"test-file\";\n  const { musics: { \n    title, \n    file,\n    picture,\n    description,\n    releaseDate,\n    } } = store.getState();\n\n    const { users : { user }} = store.getState();\n      \n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('user', user.id);\n    formData.append('file', file);\n    formData.append('picture', picture);\n    formData.append('releasedate', '03-03-2022');\n    //formData.append('releasedate', releaseDate);\n    formData.append('description', description);\n\n    const config = {\n      headers: {\n        \"Content-type\": \"multipart/form-data\"\n      },\n      onUploadProgress: data => {\n        \n        //Set the progress value to show the progress bar\n        store.dispatch(setProgress(Math.round((100 * data.loaded) / data.total)))\n        \n      }\n\n    };\n\n  const baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\n  switch (action.type) {\n    case GET_MUSICS_LIST: \n      axios.get(`${baseURL}/api/musics/top10/like`)\n      .then((response) => {\n          console.log(\"coucou juju, me voici, la réponse de la requete: \",response);\n          store.dispatch(setMusicsList(response.data));\n        })\n      .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log('error', error);\n        }); \n      break;\n\n    case SEND_MUSIC: \n      axios.post(\n      `${baseURL}/api/musics`,\n      formData, \n      config\n      ).then((response) => {        \n          // console.log('Le data a était envoyé, all is good.',response);\n          // console.log(\"je suis la reponse.status\",response.status);\n          store.dispatch(resetMusicState(response.status));\n        })\n      /* .then((response) => {\n        console.log(\"je suis la reponse.status\",response.status);\n      }); */\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        store.dispatch(setErrorCode(error.response.data.error))\n        /* console.log(\"je suis la reponse.status\",error.response.data.error); */\n        console.log('Music Upload Error', error);\n      }); \n      break;\n    default:\n    next(action);   \n  }\n};\nexport default musicApi;"]},"metadata":{},"sourceType":"module"}
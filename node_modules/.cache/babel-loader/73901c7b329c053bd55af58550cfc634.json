{"ast":null,"code":"import { SET_USER_FIELD, SET_USERS_LIST, SAVE_USER, CHANGE_MODAL_STATE, CREATE_USER, LOGOUT, SAVE_USER_WITH_SLUG } from '../actions/user';\nexport const initialState = {\n  //* l'utilisateur est-il loggé\n  logged: false,\n  //* token de l'utilisateur \n  token: '',\n  //* email de l'utilisateur\n  username: '',\n  //* password de l'utilisateur\n  password: '',\n  //? object with user deails\n  user: [],\n  // Users List\n  list: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  //Open or Close Create Modal\n  createButton: false\n}; // A noter : pour le reducer userReducer, seule la tranche user est visible !\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CREATE_USER:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USER_FIELD:\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case SET_USERS_LIST:\n      return { ...state,\n        list: action.usersList\n      };\n\n    case CHANGE_MODAL_STATE:\n      return { ...state,\n        [action.name]: !state[action.name]\n      };\n\n    case SAVE_USER:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        logged: true,\n        username: '',\n        password: '',\n        userId: action.user.id,\n        email: action.user.email,\n        token: action.user.token,\n        role: action.user.role\n      };\n\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return { ...state,\n        password: '',\n        username: '',\n        token: action.payload.token,\n        user: action.payload.user\n      };\n\n    case LOGOUT:\n      return {\n        logged: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        decription: '',\n        token: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/reducers/user.js"],"names":["SET_USER_FIELD","SET_USERS_LIST","SAVE_USER","CHANGE_MODAL_STATE","CREATE_USER","LOGOUT","SAVE_USER_WITH_SLUG","initialState","logged","token","username","password","user","list","loginButton","createButton","reducer","state","action","type","name","value","usersList","userId","id","email","role","payload","decription"],"mappings":"AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,SAHF,EAIEC,kBAJF,EAKEC,WALF,EAMEC,MANF,EAOEC,mBAPF,QAQO,iBARP;AAUA,OAAO,MAAMC,YAAY,GAAG;AAC1B;AACAC,EAAAA,MAAM,EAAE,KAFkB;AAG1B;AACAC,EAAAA,KAAK,EAAE,EAJmB;AAK1B;AACAC,EAAAA,QAAQ,EAAE,EANgB;AAO1B;AACAC,EAAAA,QAAQ,EAAE,EARgB;AAS1B;AACAC,EAAAA,IAAI,EAAE,EAVoB;AAW1B;AACAC,EAAAA,IAAI,EAAE,EAZoB;AAa1B;AACAC,EAAAA,WAAW,EAAE,KAda;AAe1B;AACAC,EAAAA,YAAY,EAAE;AAhBY,CAArB,C,CAmBP;;AACA,MAAMC,OAAO,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BV,YAA8B;AAAA,MAAhBW,MAAgB,uEAAP,EAAO;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAL;AACE,aAAM,EACJ,GAAGa,KADC;AAEJ,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFlB,OAAN;;AAKF,SAAKrB,cAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFjB,OAAP;;AAIF,SAAKpB,cAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAFR,OAAP;;AAIF,SAAKnB,kBAAL;AACE,aAAM,EACJ,GAAGc,KADC;AAEJ,SAACC,MAAM,CAACE,IAAR,GAAe,CAACH,KAAK,CAACC,MAAM,CAACE,IAAR;AAFjB,OAAN;;AAIF,SAAKlB,SAAL;AACE;AACA,aAAO,EACL,GAAGe,KADE;AAELT,QAAAA,MAAM,EAAE,IAFH;AAGLE,QAAAA,QAAQ,EAAE,EAHL;AAILC,QAAAA,QAAQ,EAAE,EAJL;AAKLY,QAAAA,MAAM,EAAEL,MAAM,CAACN,IAAP,CAAYY,EALf;AAMLC,QAAAA,KAAK,EAAEP,MAAM,CAACN,IAAP,CAAYa,KANd;AAOLhB,QAAAA,KAAK,EAAES,MAAM,CAACN,IAAP,CAAYH,KAPd;AAQLiB,QAAAA,IAAI,EAAER,MAAM,CAACN,IAAP,CAAYc;AARb,OAAP;;AAUF,SAAKpB,mBAAL;AACE;AACA,aAAO,EACL,GAAGW,KADE;AAELN,QAAAA,QAAQ,EAAE,EAFL;AAGLD,QAAAA,QAAQ,EAAE,EAHL;AAILD,QAAAA,KAAK,EAAES,MAAM,CAACS,OAAP,CAAelB,KAJjB;AAKLG,QAAAA,IAAI,EAAEM,MAAM,CAACS,OAAP,CAAef;AALhB,OAAP;;AAOF,SAAKP,MAAL;AACE,aAAO;AACLG,QAAAA,MAAM,EAAE,KADH;AAELE,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,QAAQ,EAAE,EAHL;AAILc,QAAAA,KAAK,EAAE,EAJF;AAKLZ,QAAAA,IAAI,EAAE,EALD;AAMLe,QAAAA,UAAU,EAAE,EANP;AAOLnB,QAAAA,KAAK,EAAE;AAPF,OAAP;;AAUF;AACE,aAAOQ,KAAP;AAvDJ;AAyDD,CA1DD;;AA4DA,eAAeD,OAAf","sourcesContent":["import {\n  SET_USER_FIELD, \n  SET_USERS_LIST, \n  SAVE_USER, \n  CHANGE_MODAL_STATE, \n  CREATE_USER, \n  LOGOUT,\n  SAVE_USER_WITH_SLUG,\n} from '../actions/user';\n\nexport const initialState = {\n  //* l'utilisateur est-il loggé\n  logged: false,\n  //* token de l'utilisateur \n  token: '',\n  //* email de l'utilisateur\n  username: '',\n  //* password de l'utilisateur\n  password: '',\n  //? object with user deails\n  user: [],\n  // Users List\n  list: [],\n  //Open or Close Login Modal\n  loginButton: false,\n  //Open or Close Create Modal\n  createButton: false,\n};\n\n// A noter : pour le reducer userReducer, seule la tranche user est visible !\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CREATE_USER:\n      return{\n        ...state,\n        [action.name]: action.value,\n\n      }\n    case SET_USER_FIELD:\n      return {\n        ...state,\n        [action.name]: action.value,\n      };\n    case SET_USERS_LIST:\n      return {\n        ...state,\n        list: action.usersList,\n      };\n    case CHANGE_MODAL_STATE:\n      return{\n        ...state,\n        [action.name]: !state[action.name],\n      };     \n    case SAVE_USER:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        logged: true,        \n        username: '',\n        password: '',\n        userId: action.user.id,\n        email: action.user.email,\n        token: action.user.token,\n        role: action.user.role,\n      };\n    case SAVE_USER_WITH_SLUG:\n      //console.log('etape : 5, je passe le saveUser dans le reducer');\n      return {\n        ...state,\n        password: '',\n        username: '',   \n        token: action.payload.token,\n        user: action.payload.user,\n      };\n    case LOGOUT:\n      return {\n        logged: false,\n        username: '',\n        password: '',\n        email: '',\n        list: '',\n        decription: '',\n        token: '',  \n      };\n      \n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
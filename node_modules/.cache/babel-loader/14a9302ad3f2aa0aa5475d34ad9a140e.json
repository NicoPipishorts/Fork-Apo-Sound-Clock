{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // == IMPORT ASSETS\n\nimport { LOGIN, saveUser } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        var _s = $RefreshSig$();\n\n        const {\n          users: {\n            username,\n            password\n          }\n        } = store.getState(); // Send request with User Login for JWT Token\n\n        _s(axios.post(`${baseURL}/api/login_check`, {\n          username,\n          password\n        }).then(_s(response => {\n          _s();\n\n          const navigate = useNavigate();\n          localStorage.setItem('itemName', response.data.token);\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n          let payload = JSON.parse(jsonPayload);\n          const userData = {\n            'username': payload.username,\n            'token': response.data.token\n          };\n          store.dispatch(saveUser(userData));\n          navigate('/user/Nico');\n        }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n          return [useNavigate];\n        })), \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n          return [useNavigate];\n        }).catch(() => console.log('error'));\n      }\n      break;\n\n    default:\n      next(action);\n\n    /*\n    case GET_USER: {\n       const { user: { usnername, password } } = store.getState();\n       axiosInstance\n        .get(\n          '/api/test',\n          // on transmet notre token dans le header de la requête HTTP\n          // Ici on s'appuie que le mécanisme de configuration d'axios\n          {\n            usnername,\n            password,\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          },\n        )\n        .then(\n          (response) => {\n          // une fois les favoris obtenus, on demande leur sauvegarde dans le state\n            store.dispatch(saveFavorites(response.data.favorites));\n          },\n        ).catch(\n          () => console.log('error recup favoris'),\n        );\n      next(action);\n      break;\n    }\n    */\n\n    /*    case LOGOUT:\n         // au logout, on supprime le token de l'instance\n         axiosInstance.defaults.headers.common.Authorization = null;\n         next(action);\n         break;\n       default:\n         next(action); */\n  }\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","useNavigate","LOGIN","saveUser","baseURL","authMiddleWare","store","next","action","type","users","username","password","getState","post","then","response","navigate","localStorage","setItem","data","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","userData","dispatch","catch","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,SACEC,KADF,EACSC,QADT,QAEO,iBAFP,C,CAIA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,uEAAhB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAL;AAAY;AAAA;;AACV,cAAM;AAAEQ,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AAAT,YAAoCN,KAAK,CAACO,QAAN,EAA1C,CADU,CAGV;;AACA,WAAAb,KAAK,CAACc,IAAN,CAAY,GAAEV,OAAQ,kBAAtB,EAAyC;AACvCO,UAAAA,QADuC;AAEvCC,UAAAA;AAFuC,SAAzC,EAGGG,IAHH,IAIGC,QAAD,IAAc;AAAA;;AACZ,gBAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACAiB,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,QAAQ,CAACI,IAAT,CAAcC,KAA/C;AACA,gBAAMA,KAAK,GAAGL,QAAQ,CAACI,IAAT,CAAcC,KAA5B;AACA,cAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,cAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb;AACA,cAAIC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAD,CAAJ,CAAaD,KAAb,CAAmB,EAAnB,EAAuBM,GAAvB,CAA2B,UAASC,CAAT,EAAY;AACxE,mBAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,WAFoC,EAElCC,IAFkC,CAE7B,EAF6B,CAAD,CAApC;AAIA,cAAIC,OAAO,GAAIC,IAAI,CAACC,KAAL,CAAWX,WAAX,CAAf;AAEA,gBAAMY,QAAQ,GAAG;AACf,wBAAaH,OAAO,CAACxB,QADN;AAEf,qBAAUK,QAAQ,CAACI,IAAT,CAAcC;AAFT,WAAjB;AAKAf,UAAAA,KAAK,CAACiC,QAAN,CAAepC,QAAQ,CAACmC,QAAD,CAAvB;AACArB,UAAAA,QAAQ,CAAC,YAAD,CAAR;AACD,SAvBH;AAAA,kBAKqBhB,WALrB;AAAA;AAAA,kBAKqBA,WALrB;AAAA,WAwBEuC,KAxBF,CAyBE,MAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAzBR;AA2BD;AACD;;AACA;AACAnC,MAAAA,IAAI,CAACC,MAAD,CAAJ;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGC;AACD;AACA;AACA;AACA;AACA;AACA;AAxEE;AA4ED,CA7ED;;AA+EA,eAAeH,cAAf","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, saveUser,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      const { users: { username, password } } = store.getState();\n\n      // Send request with User Login for JWT Token\n      axios.post(`${baseURL}/api/login_check`, {\n        username,\n        password,\n      }).then(\n        (response) => {\n          const navigate = useNavigate();\n          localStorage.setItem('itemName', response.data.token)\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n\n          let payload =  JSON.parse(jsonPayload);\n\n          const userData = { \n            'username' : payload.username,\n            'token' : response.data.token,\n          }\n\n          store.dispatch(saveUser(userData));    \n          navigate('/user/Nico'); \n        },\n      ).catch(\n        () => console.log('error'),\n      );\n    }\n    break;\n    default:\n    next(action);\n    /*\n    case GET_USER: {\n\n      const { user: { usnername, password } } = store.getState();\n\n      axiosInstance\n        .get(\n          '/api/test',\n          // on transmet notre token dans le header de la requête HTTP\n          // Ici on s'appuie que le mécanisme de configuration d'axios\n          {\n            usnername,\n            password,\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          },\n        )\n        .then(\n          (response) => {\n          // une fois les favoris obtenus, on demande leur sauvegarde dans le state\n            store.dispatch(saveFavorites(response.data.favorites));\n          },\n        ).catch(\n          () => console.log('error recup favoris'),\n        );\n      next(action);\n      break;\n    }\n    */\n /*    case LOGOUT:\n      // au logout, on supprime le token de l'instance\n      axiosInstance.defaults.headers.common.Authorization = null;\n      next(action);\n      break;\n    default:\n      next(action); */\n\n\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/Columns/CardMusic.js\";\n// == IMPORT NPM\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player'; // == IMPORT ASSETS\n\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColumnsCard = _ref => {\n  let {\n    image,\n    song,\n    name,\n    date,\n    nbLike,\n    nbListened,\n    baseApiUrl\n  } = _ref;\n  let pictureFile = '';\n  let audioFile = '';\n\n  function isValidHttpUrl(string) {\n    let url;\n\n    try {\n      url = new URL(string);\n    } catch (_) {\n      return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n  }\n\n  if (isValidHttpUrl(image)) {\n    pictureFile = image;\n  } else {\n    pictureFile = `${baseApiUrl}/${image}`;\n  }\n\n  if (isValidHttpUrl(song)) {\n    audioFile = song;\n  } else {\n    audioFile = `${baseApiUrl}/${song}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      className: \"cards-image\",\n      src: pictureFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n        src: audioFile,\n        autoPlay: true,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n        children: \"Matthew is a musician living in Nashville.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), nbLike, \" Likes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"sound\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), nbListened, \" Listened\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ColumnsCard;\nColumnsCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  nbLike: PropTypes.number.isRequired,\n  nbListened: PropTypes.number.isRequired,\n  baseApiUrl: PropTypes.string.isRequired\n};\nexport default ColumnsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnsCard\");","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/components/Columns/CardMusic.js"],"names":["Card","Icon","Image","PropTypes","ReactAudioPlayer","ColumnsCard","image","song","name","date","nbLike","nbListened","baseApiUrl","pictureFile","audioFile","isValidHttpUrl","string","url","URL","_","protocol","propTypes","isRequired","number"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player';\n\n// == IMPORT ASSETS\nimport \"./styles.scss\";\n\nconst ColumnsCard = ( {\n  image, \n  song, \n  name, \n  date, \n  nbLike, \n  nbListened,\n  baseApiUrl,\n}) => {\n\n  let pictureFile = ''; \n  let audioFile = '';\n  \n\n  function isValidHttpUrl(string) {\n    let url;    \n    try {\n      url = new URL(string);\n    } catch (_) {\n      return false;  \n    }  \n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n  }\n\n  if(isValidHttpUrl(image)){\n    pictureFile = image;\n    \n  } else {\n    pictureFile = `${baseApiUrl}/${image}`;\n    \n  }\n\n  if(isValidHttpUrl(song)){\n    audioFile = song;\n    \n  } else {\n    audioFile = `${baseApiUrl}/${song}`;\n    \n  }\n\n\n\n  return (\n    <Card className='cards-container'>\n    <Image \n      className='cards-image'\n      src={pictureFile}\n    />\n    <Card.Content>\n      <Card.Header>{name}</Card.Header>\n      <Card.Meta>\n        <span className='date'>{date}</span>\n      </Card.Meta>\n      <ReactAudioPlayer\n        src={audioFile}\n        autoPlay\n        controls\n      />\n      <Card.Description>\n        Matthew is a musician living in Nashville.\n      </Card.Description>\n      <a href=''>\n        <Icon name='like' />\n        {nbLike} Likes\n      </a>\n      <br />\n      <a href=''>\n        <Icon name='sound' />\n        {nbListened} Listened\n      </a>\n    </Card.Content>\n  </Card>\n\n  );\n\n};\n\nColumnsCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  nbLike: PropTypes.number.isRequired,\n  nbListened: PropTypes.number.isRequired,\n  baseApiUrl: PropTypes.string.isRequired,\n}\n\nexport default ColumnsCard;"]},"metadata":{},"sourceType":"module"}
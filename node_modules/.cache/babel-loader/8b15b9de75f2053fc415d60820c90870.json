{"ast":null,"code":"// == IMPORT NPM\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // == IMPORT ASSETS\n\nimport { LOGIN, GET_USER, getUser, saveUser } from '../actions/user'; // on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public';\n\nconst authMiddleWare = store => next => {\n  var _s = $RefreshSig$();\n\n  return _s(action => {\n    _s();\n\n    switch (action.type) {\n      case LOGIN:\n        {\n          const {\n            users: {\n              username,\n              password\n            }\n          } = store.getState(); // Send request with User Login for JWT Token\n\n          axios.post(`${baseURL}/api/login_check`, {\n            username,\n            password\n          }).then(response => {\n            localStorage.setItem('itemName', response.data.token);\n            const token = response.data.token;\n            let base64Url = token.split('.')[1];\n            let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n            let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            }).join(''));\n            let payload = JSON.parse(jsonPayload);\n            const userData = {\n              'username': payload.username,\n              'token': response.data.token\n            };\n            store.dispatch(saveUser(userData));\n            store.dispatch(getUser(username));\n          }).catch(() => console.log('error'));\n        }\n        break;\n\n      case GET_USER:\n        const {\n          users: {\n            username,\n            token,\n            list\n          }\n        } = store.getState();\n        let user = list.find(user => user.email === username);\n        user.token = token;\n        store.dispatch(saveUser(user));\n        const navigate = useNavigate();\n\n        sendBackToUser = () => {\n          navigate(`/user/${user.slug}`);\n        };\n\n        break;\n\n      default:\n        next(action);\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};\n\nexport default authMiddleWare;","map":{"version":3,"sources":["/Users/nicolaspisar/Sites/_OClock/react/Apo/projet-9-sound-clock-front/src/middlewares/auth.js"],"names":["axios","useNavigate","LOGIN","GET_USER","getUser","saveUser","baseURL","authMiddleWare","store","next","action","type","users","username","password","getState","post","then","response","localStorage","setItem","data","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","userData","dispatch","catch","console","log","list","user","find","email","navigate","sendBackToUser","slug"],"mappings":"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","sourcesContent":["// == IMPORT NPM\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// == IMPORT ASSETS\nimport {\n  LOGIN, GET_USER, getUser, saveUser,\n} from '../actions/user';\n\n// on crée une instance d'axios\n// on va pouvoir se configurer cette instance\n// avant de s'en servir\n\nconst baseURL = 'http://denisjulien-server.eddi.cloud/projet-9-sound-clock-back/public'\n\nconst authMiddleWare = (store) => (next) => (action) => {\n  switch (action.type) {\n    case LOGIN: {\n      const { users: { username, password } } = store.getState();\n\n      // Send request with User Login for JWT Token\n      axios.post(`${baseURL}/api/login_check`, {\n        username,\n        password,\n      }).then(\n        (response) => {\n          localStorage.setItem('itemName', response.data.token)\n          const token = response.data.token;\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n\n          let payload =  JSON.parse(jsonPayload);\n\n          const userData = { \n            'username' : payload.username,\n            'token' : response.data.token,\n          }\n\n          store.dispatch(saveUser(userData));  \n          store.dispatch(getUser(username));   \n        },\n      ).catch(\n        () => console.log('error'),\n      );\n    }\n    break;\n    case GET_USER: \n\n      const {users: { username, token, list}} = store.getState();\n\n      let user = list.find(user => user.email === username);\n      user.token = token;\n      store.dispatch(saveUser(user)); \n          \n      const navigate = useNavigate();\n\n      sendBackToUser = () => { \n        navigate(`/user/${user.slug}`);\n      }\n\n    break;\n  default:\n    next(action);\n  }\n};\n\nexport default authMiddleWare;\n"]},"metadata":{},"sourceType":"module"}